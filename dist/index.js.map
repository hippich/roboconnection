{"version":3,"sources":["webpack://roboconnection/webpack/universalModuleDefinition","webpack://roboconnection/webpack/bootstrap","webpack://roboconnection/./src/connection/jibo-command-protocol/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/tokens/RequestToken.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/RequestAPI.ts","webpack://roboconnection/./node_modules/axios/lib/utils.js","webpack://roboconnection/./src/connection/jibo-command-requester/events/Event.ts","webpack://roboconnection/./src/connection/jibo-command-requester/UUID.ts","webpack://roboconnection/./node_modules/ws/lib/constants.js","webpack://roboconnection/external \"http\"","webpack://roboconnection/external \"crypto\"","webpack://roboconnection/./node_modules/ws/lib/permessage-deflate.js","webpack://roboconnection/./node_modules/axios/lib/defaults.js","webpack://roboconnection/./node_modules/axios/lib/core/createError.js","webpack://roboconnection/external \"https\"","webpack://roboconnection/external \"url\"","webpack://roboconnection/external \"events\"","webpack://roboconnection/./node_modules/ws/lib/buffer-util.js","webpack://roboconnection/./node_modules/axios/lib/helpers/bind.js","webpack://roboconnection/./node_modules/axios/lib/core/settle.js","webpack://roboconnection/./node_modules/axios/lib/core/enhanceError.js","webpack://roboconnection/./node_modules/axios/lib/helpers/buildURL.js","webpack://roboconnection/./node_modules/follow-redirects/index.js","webpack://roboconnection/external \"stream\"","webpack://roboconnection/./node_modules/follow-redirects/node_modules/debug/src/debug.js","webpack://roboconnection/external \"zlib\"","webpack://roboconnection/./node_modules/axios/lib/cancel/isCancel.js","webpack://roboconnection/./node_modules/axios/lib/cancel/Cancel.js","webpack://roboconnection/./src/connection/jibo-command-requester/Requester.ts","webpack://roboconnection/./node_modules/ws/lib/websocket.js","webpack://roboconnection/./node_modules/ws/lib/extension.js","webpack://roboconnection/./node_modules/ws/lib/receiver.js","webpack://roboconnection/./node_modules/ws/lib/validation.js","webpack://roboconnection/./node_modules/ws/lib/sender.js","webpack://roboconnection/./src/connection/jibo-command-requester/requests/index.ts","webpack://roboconnection/./src/index.ts","webpack://roboconnection/./src/connection/RobotConnection.ts","webpack://roboconnection/./node_modules/axios/index.js","webpack://roboconnection/./node_modules/axios/lib/axios.js","webpack://roboconnection/./node_modules/is-buffer/index.js","webpack://roboconnection/./node_modules/axios/lib/core/Axios.js","webpack://roboconnection/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://roboconnection/./node_modules/axios/lib/adapters/xhr.js","webpack://roboconnection/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://roboconnection/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://roboconnection/./node_modules/axios/lib/helpers/btoa.js","webpack://roboconnection/./node_modules/axios/lib/helpers/cookies.js","webpack://roboconnection/./node_modules/axios/lib/adapters/http.js","webpack://roboconnection/external \"assert\"","webpack://roboconnection/./node_modules/follow-redirects/node_modules/debug/src/index.js","webpack://roboconnection/./node_modules/follow-redirects/node_modules/debug/src/browser.js","webpack://roboconnection/./node_modules/ms/index.js","webpack://roboconnection/./node_modules/follow-redirects/node_modules/debug/src/node.js","webpack://roboconnection/external \"tty\"","webpack://roboconnection/external \"util\"","webpack://roboconnection/./node_modules/supports-color/index.js","webpack://roboconnection/external \"os\"","webpack://roboconnection/./node_modules/has-flag/index.js","webpack://roboconnection/./node_modules/axios/lib/core/InterceptorManager.js","webpack://roboconnection/./node_modules/axios/lib/core/dispatchRequest.js","webpack://roboconnection/./node_modules/axios/lib/core/transformData.js","webpack://roboconnection/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://roboconnection/./node_modules/axios/lib/helpers/combineURLs.js","webpack://roboconnection/./node_modules/axios/lib/cancel/CancelToken.js","webpack://roboconnection/./node_modules/axios/lib/helpers/spread.js","webpack://roboconnection/./src/connection/jibo-command-requester/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/connection/ConnectionManager.ts","webpack://roboconnection/./node_modules/ws/index.js","webpack://roboconnection/external \"net\"","webpack://roboconnection/external \"tls\"","webpack://roboconnection/./node_modules/async-limiter/index.js","webpack://roboconnection/./node_modules/ws/lib/event-target.js","webpack://roboconnection/./node_modules/ws/lib/websocket-server.js","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/LoadAssets.ts","webpack://roboconnection/./src/connection/jibo-command-requester/utils/ExternalPromise.ts","webpack://roboconnection/./src/connection/jibo-command-protocol/Enums.ts","webpack://roboconnection/./src/connection/jibo-command-protocol/TypeGuards.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/UnloadAssets.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/Session.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/camera/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/camera/Photo.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/camera/Video.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/expression/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/expression/Attention.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/expression/LookAt.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/expression/Display.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/expression/Play.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/expression/VideoPlayback.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/listen/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/listen/HotWord.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/listen/Listen.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/lps/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/lps/FaceTrack.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/lps/MotionTrack.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/sensory/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/sensory/HeadTouch.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/sensory/ScreenGesture.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/settings/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/settings/GetConfig.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v1/settings/SetConfig.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v2/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v2/structural/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v2/structural/Parallel.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v2/structural/Sequence.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v2/emotion/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v2/emotion/ImpactEmotion.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v2/perception/index.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v2/perception/SetPresentPerson.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v2/Play.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v2/Listen.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v2/Display.ts","webpack://roboconnection/./src/connection/jibo-command-requester/requests/v2/SLIM.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__export","typeguards","ExternalPromise_1","RequestToken","owner","protocol","isComplete","requestId","_complete","default","promise","cancel","reject","Type","ID","sendRequest","RequestAPI","sendToken","token","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","EmitterMode","Event","_onceEvents","Map","_events","_maxListeners","_emitterMode","ALL_HANDLERS","listeners","slice","setMaxListeners","getMaxListeners","once","handler","_this","handlerWrapper","data","delete","removeListener","set","on","console","warn","Error","stack","push","removeLastListener","splice","removeFirstListener","addListener","index","indexOf","onceHandler","index_1","off","removeAllListeners","clear","emit","copy","LAST_HANDLER","FIRST_HANDLER","setMode","waitFor","timeoutMs","Promise","resolve","timeoutHandle","eventHandler","clearTimeout","setTimeout","listenerCount","generateTransactionID","process","crypto_1","hashSource","hrtime","createHash","update","digest","uuid","v4","split","join","BINARY_TYPES","GUID","kStatusCode","kWebSocket","EMPTY_BUFFER","Buffer","alloc","NOOP","require","Limiter","zlib","bufferUtil","constants","TRAILER","from","EMPTY_BLOCK","kPerMessageDeflate","kWriteInProgress","kPendingClose","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","deflateOnData","chunk","inflateOnData","_maxPayload","RangeError","reset","inflateOnError","err","_inflate","[object Object]","options","isServer","maxPayload","_options","_threshold","undefined","threshold","_isServer","_deflate","params","concurrency","concurrencyLimit","extensionName","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","configurations","normalizeParams","acceptAsServer","acceptAsClient","close","offers","opts","accepted","find","response","keys","num","Number","isInteger","TypeError","fin","callback","done","_decompress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","assign","zlibInflateOptions","write","flush","concat","nextTick","createDeflateRaw","zlibDeflateOptions","Z_SYNC_FLUSH","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","defaults","adapter","XMLHttpRequest","getDefaultAdapter","transformRequest","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","method","enhanceError","message","config","code","request","error","list","totalLength","target","allocUnsafe","offset","buf","_mask","source","mask","output","_unmask","bu","BufferUtil","unmask","args","Array","apply","createError","encode","encodeURIComponent","url","paramsSerializer","serializedParams","parts","v","toISOString","http","https","assert","Writable","debug","SAFE_METHODS","GET","HEAD","OPTIONS","TRACE","eventHandlers","RedirectableRequest","responseCallback","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","_onNativeResponse","_processResponse","pathname","path","searchPos","substring","search","_performRequest","wrap","protocols","maxRedirects","maxBodyLength","nativeProtocols","scheme","nativeProtocol","wrappedProtocol","equal","end","event","arg","_redirectable","encoding","_currentRequest","abort","currentRequest","setHeader","removeHeader","agents","substr","agent","_currentUrl","format","_isRedirect","buffers","writeNext","trackRedirects","statusCode","location","followRedirects","header","test","redirectUrl","destroy","responseUrl","redirects","createDebug","namespace","prevTime","enabled","curr","Date","ms","diff","prev","coerce","unshift","match","formatter","formatters","formatArgs","log","useColors","color","hash","charCodeAt","colors","Math","abs","selectColor","init","instances","disable","enable","namespaces","save","names","skips","len","RegExp","instance","humanize","__CANCEL__","Cancel","ConnectionManager_1","requests_1","Session","v1","session","Attention","expression","attention","LookAt","lookAt","Display","display","VideoPlayback","video","FaceTrack","lps","face","MotionTrack","motion","HotWord","listen","hotWord","Listen","Play","play","Photo","camera","photo","Video","LoadAssets","loadAssets","UnloadAssets","unloadAssets","HeadTouch","sensory","headTouch","GetConfig","settings","getConfig","SetConfig","setConfig","ScreenGesture","screenGesture","jibo_command_protocol_1","Event_1","UUID_1","Requester","robotVersion","AppID","sessionId","robotName","inProgressTokens","connection","onMessage","disconnected","reason","videoPlayback","faceTrack","motionTrack","say","prompt","look","lookAtTarget","type","angle","theta","vectorData","position","vector","x","y","z","setAttentionMode","mixer","Mixer","perception","subscribe","trackMotions","trackFaces","hotword","connect","then","startSession","complete","ResponseBody","Version","SessionID","catch","disconnect","command","TransactionID","Credentials","sendTo","ClientHeader","Command","id","ack","isAcknowledgement","ResponseHeader","isEvent","EventHeader","has","handleAck","handleEvent","EventEmitter","crypto","net","tls","PerMessageDeflate","EventTarget","extension","Receiver","Sender","readyStates","protocolVersions","closeTimeout","WebSocket","address","super","readyState","CONNECTING","_binaryType","_closeFrameReceived","_closeFrameSent","_closeMessage","_closeTimer","_closeCode","_extensions","_receiver","_sender","_socket","protocolVersion","perMessageDeflate","createConnection","socketPath","hostname","auth","host","port","parsedUrl","href","URL","isUnixSocket","isSecure","randomBytes","httpObj","tlsConnect","netConnect","startsWith","Sec-WebSocket-Version","Sec-WebSocket-Key","Connection","Upgrade","offer","origin","Origin","username","password","req","_req","handshakeTimeout","abortHandshake","aborted","CLOSING","emitClose","res","socket","head","serverProt","protList","protError","extensions","accept","setSocket","CLOSED","OPEN","binaryType","bufferedAmount","bufferSize","_bufferedBytes","receiver","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","setNoDelay","socketOnClose","socketOnData","socketOnEnd","socketOnError","cleanup","msg","writable","cb","ping","pong","binary","compress","send","servername","websocket","stream","captureStackTrace","resume","receiverOnFinish","read","_writableState","finished","errorEmitted","pause","_listener","listener","addEventListener","removeEventListener","tokenChars","dest","elem","map","k","values","paramName","mustUnescape","isEscaping","inQuotes","start","SyntaxError","validation","GET_INFO","GET_PAYLOAD_LENGTH_16","GET_PAYLOAD_LENGTH_64","GET_MASK","GET_DATA","INFLATING","ErrorCtor","prefix","toBuffer","fragments","messageLength","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","startLoop","shift","dst","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","consume","compressed","haveLength","readUInt16BE","readUInt32BE","pow","controlMessage","decompress","dataMessage","er","byteOffset","byteLength","toArrayBuffer","isValidUTF8","isValidStatusCode","Validation","_firstFragment","_deflating","_queue","readOnly","payloadLength","opcode","rsv1","writeUInt16BE","writeUInt32BE","enqueue","doClose","sendFrame","frame","viewToBuffer","doPing","doPong","dispatch","_","readable","dequeue","view","v2","RobotConnection_1","JiboConnection","Requester_1","axios_1","events_1","jibo_command_requester_1","_super","robotInfo","connectionInfo","_numTries","_gotCertificate","_p12Certificate","_certificateFingerprint","_accessToken","_tokenType","_interval","_connected","_debugLogging","_robotInfo","_connectionInfo","__extends","debugLogging","serialName","email","clientId","clientSecret","login","logError","statusMessage","getTokenUri","param","grant_type","client_id","client_secret","User-Agent","logDebug","body_obj","access_token","token_type","getRobotList","getRobotListUri","Authorization","createCertificate","certificateCreationUri","friendlyId","ip","setInterval","retrieveCertificate","MAX_TRIES","certificateRetrievalUri","CancelToken","cancelToken","clearInterval","payload","ipAddress","private","cert","fingerprint","connectToRobot","requester","onDisconnected","DEFAULT_PORT","rejectUnauthorized","_requester","onConnected","clearMessages","subsystem","_i","DEV_ENDPOINT","STG_ENDPOINT","PREPROD_ENDPOINT","PROD_ENDPOINT","ENVIRONMENT_OPTIONS","Axios","createInstance","defaultConfig","context","axios","instanceConfig","isCancel","all","promises","spread","constructor","readFloatLE","isSlowBuffer","_isBuffer","InterceptorManager","dispatchRequest","interceptors","toLowerCase","chain","interceptor","fulfilled","rejected","normalizedName","toUpperCase","settle","buildURL","parseHeaders","isURLSameOrigin","btoa","requestData","requestHeaders","loadEvent","xDomain","XDomainRequest","onprogress","ontimeout","open","responseURL","responseHeaders","getAllResponseHeaders","responseType","responseText","statusText","onerror","cookies","xsrfValue","withCredentials","setRequestHeader","onDownloadProgress","onUploadProgress","upload","ignoreDuplicateOf","parsed","line","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","setAttribute","charAt","requestURL","chars","E","input","block","charCode","String","idx","expires","domain","secure","cookie","toGMTString","decodeURIComponent","remove","now","httpFollow","httpsFollow","pkg","timer","version","Uint8Array","urlAuth","isHttps","httpsAgent","httpAgent","transport","proxy","proxyEnv","proxyUrl","env","parsedProxyUrl","proxyUrlAuth","base64","createUnzip","lastRequest","responseBuffer","responseData","load","storage","DEBUG","Function","lastC","removeItem","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","$1","chrome","local","localStorage","localstorage","j","h","plural","floor","ceil","exec","parseFloat","isNaN","long","fmtLong","round","fmtShort","tty","util","inspectOpts","stderr","colorCode","hideDate","Boolean","isatty","fd","supportsColor","level","filter","reduce","prop","inspect","O","os","hasFlag","forceColor","getSupportLevel","hasBasic","has256","has16m","translateLevel","isTTY","min","platform","osRelease","release","versions","node","some","sign","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","FORCE_COLOR","stdout","flag","argv","pos","terminatorPos","handlers","use","eject","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","baseURL","fns","relativeURL","executor","resolvePromise","arr","enums","WSWebSocket","ConnectionManager","onConnection","onClose","namedConnections","connected","isConnected","robot","startWebSocket","__assign","onError","connectionString","websocket_1","errorCallback_1","ws","Server","Queue","Infinity","pending","jobs","cbs","_done","_run","methodResult","job","pop","onDone","MessageEvent","CloseEvent","wasClean","OpenEvent","ErrorEvent","onOpen","server","STATUS_CODES","Content-type","Content-Length","handleProtocols","clientTracking","verifyClient","noServer","backlog","_server","createServer","body","writeHead","_removeListeners","addListeners","listening","upgrade","handleUpgrade","clients","Set","client","terminate","shouldHandle","info","authorized","encrypted","verified","completeUpgrade","add","RequestToken_1","RequestAPI_1","FetchAssetToken","Response","ResponseCode","EventBody","FetchAssetEvents","AssetReady","AssetFailed","generateProtocol","uri","CommandTypes","FetchAsset","URI","Name","fetchAsset","generateToken","andSend","ExternalPromise","rej","PhotoEvents","TakePhoto","VideoEvents","VideoReady","DisconnectReason","4000","4001","4002","4003","4004","4005","DisconnectCode","HeadTouchExit","RobotError","NewConnection","InactivityTimeout","ReconnectTimeout","ReconnectError","ResponseStrings","200","201","202","400","403","404","406","407","409","412","500","503","505","506","AttentionMode","Off","Idle","Disengage","Engaged","Speaking","Fixated","Attractable","Menu","StartSession","SetAttention","Say","Subscribe","UnloadAsset","AsyncCommandEvent","Start","Stop","DisplayEvents","ViewStateChange","ViewStates","Opened","Closed","DisplayViewType","Eye","Text","Image","LookAtEvents","LookAtAchieved","TrackEntityLost","HotWordEvents","HotWordHeard","ListenResult","StreamTypes","Entity","Motion","ListenEvents","ListenStopReasons","NoInput","NoMatch","Interrupted","EntityTrackEvents","TrackUpdate","TrackLost","TrackGained","MotionEvents","MotionDetected","HeadTouchEvents","HeadTouched","ScreenGestureEvents","Tap","Swipe","ConfigEvents","onConfig","UnloadAssetEvents","UnloadAssetDone","UnloadAssetFailed","CameraResolution","HighRes","MedRes","LowRes","MicroRes","SwipeDirection","Up","Down","Right","Left","Camera","EntityType","Person","Unknown","DisplayErrorDetails","IdNotUnique","MissingValues","InvalidViewType","AssetError","DisplayChangeType","Swap","FetchAssetErrorDetails","OutOfMemory","InvalidURI","UnloadAssetErrorDetails","InvalidName","OK","Created","Accepted","BadRequest","Forbidden","NotFound","NotAcceptable","RequestTimeout","Conflict","PreconditionFailed","InternalError","ServiceUnavailable","VersionNotSupported","VersionConflict","VideoType","Normal","Debug","ProtocolVersions","isAngleTarget","isEntityTarget","isPositionTarget","isCameraTarget","UnloadAssetToken","unloadAsset","SessionToken","PhotoToken","resolution","removeDistortion","Resolution","Distortion","takePhoto","VideoToken","streamReady","eventData","duration","Duration","getVideo","AttentionToken","Mode","TargetMode","LookAtToken","targetMode","levelHead","shouldTrack","Position","Angle","Screen","ScreenCoords","LookAtTarget","TrackFlag","LevelHeadFlag","screenPosition","entity","DisplayToken","opened","State","View","swap","swapView","createEyeView","createTextView","text","createImageView","SayToken","esmlUri","speakOptions","autoRuleConfig","ESML","SpeakOptions","AutoRuleConfig","esml","sound","VideoPlaybackToken","HotWordToken","hotWordHeard","listenResult","StreamType","StreamFilter","ListenToken","maxSpeechTimeout","maxNoSpeechTimeout","languageCode","MaxSpeechTimeout","MaxNoSpeechTimeout","LanguageCode","FaceTrackToken","gained","lost","Tracks","MotionToken","Motions","HeadTouchToken","Pads","ScreenGestureToken","tap","swipe","Coordinate","Direction","GetConfigToken","SetConfigToken","Options","structural","emotion","slim","Parallel","behaviors","succeedOnFirst","children","Sequence","ImpactEmotion","valence","confidence","SetPresentPerson","looperId","rules","intents","contexts","layer","visible","keepDisplay","onCancel","overlay","SLIM"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"roboconnection\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"roboconnection\"] = factory();\n\telse\n\t\troot[\"roboconnection\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","export * from './Enums';\nimport * as typeguards from './TypeGuards';\nexport {typeguards};","import Requester from '../Requester';\nimport ExternalPromise from '../utils/ExternalPromise';\n\n//as TypedEvents from jibo-typed-events\n/**\n * Every request has a token with a completion promise and any events relative to that command.\n * @class RequestToken\n */\nexport default abstract class RequestToken<C extends JIBO.v1.BaseCommand, Result = any> {\n    /**\n     * Protocol data to be sent along the websocket.\n     * @private\n     */\n    public protocol:C;\n    /**\n     * Unique id for this request, and any responses to it.\n     * @private\n     */\n    public requestId:string;\n    /**\n     * Internal flag for the Requester to know that it no longer needs to track the token. Must\n     * be updated by subclasses when `complete` resolves.\n     * @private\n     */\n    public isComplete:boolean;\n\n    /**\n     * For subclasses to know where to send cancel requests\n     * @private\n     */\n    public owner:Requester;\n\n    //probably everyone needs to implement this a little different - resolves when command completes\n    //rejects if command is rejected/interrupted\n    protected _complete:ExternalPromise<Result>;\n\n    //subclasses should override this to provide a typed promise\n    /**\n     * Request completion promise.\n     * @method RequestToken#complete\n     * @returns this\n     */\n    public get complete() {\n        return this._complete.promise;\n    }\n\n    /** @private */\n    constructor(owner:Requester, protocol: C) {\n        this.owner = owner;\n        this.protocol = protocol;\n        this.isComplete = false;\n        this.requestId = '';\n        this._complete = new ExternalPromise();\n    }\n\n    /**\n     * Cancel the request.\n     * @method RequestToken#cancel\n     */\n    public cancel():void {\n        if (this.isComplete) {\n            return;\n        }\n        this.isComplete = true;\n        this._complete.reject();\n\n        //overwrite the protocol for this token, then send the request\n        const cancel:JIBO.v1.CancelRequest = {\n            Type: \"Cancel\",\n            ID: this.requestId\n        };\n        // Need a unique requestId for the cancel command\n        this.owner.sendRequest(cancel);\n    }\n\n    /**\n     * Internal listener method for handling responses\n     * @private\n     */\n    public abstract handleAck(data:JIBO.v1.Acknowledgement):void;\n\n    /**\n     * Internal listener method for handling responses\n     * @private\n     */\n    public abstract handleEvent(data:JIBO.v1.EventMessage):void;\n}\n","import Requester from '../Requester';\nimport RequestToken from '../tokens/RequestToken';\n\nexport default abstract class RequestAPI<R extends JIBO.v1.BaseCommand, T extends RequestToken<R>> {\n    protected owner:Requester;\n\n    constructor(owner:Requester) {\n        this.owner = owner;\n    }\n\n    abstract generateToken(protocol: R): T;\n\n    public sendToken(token: T): void {\n        this.owner.sendToken(token);\n    }\n}","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","export interface Handler <Type> {\n  (data?: Type): void;\n}\n\nexport enum EmitterMode {\n  ALL_HANDLERS = 'ALL_HANDLERS',\n  FIRST_HANDLER = 'FIRST_HANDLER',\n  LAST_HANDLER = 'LAST_HANDLER'\n}\n\n\nexport class Event <Type> {\n\n  private _onceEvents = new Map<Handler<Type>, Handler<Type>>();\n  private _events: Handler<Type>[] = [];\n  private _maxListeners = 10;\n\n  /*\n   * Mode of order to emit events.\n   * In Stack mode, only emits to last event subscribed\n   * @type {enum}\n   */\n  private _emitterMode:EmitterMode = EmitterMode.ALL_HANDLERS;\n\n  /*\n   * Creates an Event object\n   * @param {String} name Name of event\n   */\n  constructor(public name: string) {\n\n  }\n\n  /*\n   * Returns a list of currently subscribed handlers\n   */\n  listeners(): Handler<Type>[] {\n    return this._events.slice();\n  }\n\n\n  /*\n   * Sets the maximum number of listeners\n   * @param {number} n\n   * @returns {Event} this\n   */\n  setMaxListeners(n: number) {\n    this._maxListeners = n;\n    return this;\n  }\n\n  /*\n   * Gets the maximum number of listeners\n   * @returns {number}\n   */\n  getMaxListeners() {\n    return this._maxListeners;\n  }\n\n  /*\n   * Subscribes a handler function to only the next event\n   * @return {Event} this\n   */\n  once(handler: Handler<Type>) {\n    let handlerWrapper:any = this._onceEvents.get(handler);\n    if (!handlerWrapper) {\n      handlerWrapper = (data:any) => {\n        this._onceEvents.delete(handler);\n        this.removeListener(handlerWrapper);\n        handler(data);\n      };\n      this._onceEvents.set(handler, handlerWrapper);\n    }\n\n    return this.on(handlerWrapper);\n  }\n\n  /*\n   * Subscribes a handler function to this event\n   * @return {Event} this\n   */\n  on(handler: Handler<Type>) {\n    if (this._events.length >= this._maxListeners) {\n      console.warn(`Event '${this.name}': Max listeners ${this._maxListeners} reached. `, new Error().stack);\n    }\n    this._events.push(handler);\n    return this;\n  }\n\n  /*\n   * Unsubscribes most recently added subscriber\n   * @return {Event} this\n   */\n  removeLastListener() {\n    this._events.splice(this._events.length - 1, 1);\n  }\n\n  /*\n   * Unsubscribes oldest added subscriber\n   * @return {Event} this\n   */\n  removeFirstListener() {\n    // if events is empty, no error; still gives empty array.\n    this._events.splice(0, 1);\n  }\n\n\n  /*\n   * Subscribes a handler function to this event\n   * @return {Event} this\n   */\n  addListener(handler: Handler<Type>) {\n    return this.on(handler);\n  }\n\n  /*\n   * Unsubscribes a handler function from this event\n   * @param {Handler} handler\n   * @return {Event} this\n   */\n  removeListener(handler: Handler<Type>) {\n    // We remove the handler if it has been provided through `on`\n    let index = this._events.indexOf(handler);\n    while (index !== -1) {\n      this._events.splice(index, 1);\n      index = this._events.indexOf(handler, index);\n    }\n\n    // We remove the handler if it has been provided through `once`\n    const onceHandler = this._onceEvents.get(handler);\n    if (onceHandler) {\n      let index = this._events.indexOf(onceHandler);\n      while (index !== -1) {\n        this._events.splice(index, 1);\n        index = this._events.indexOf(onceHandler, index);\n      }\n      this._onceEvents.delete(handler);\n    }\n\n    return this;\n  }\n\n  /*\n   * Unsubscribes a handler function from this event (alias for removeListener)\n   * @param {Handler} handler\n   * @return {Event} this\n   */\n  off(handler: Handler<Type>) {\n    return this.removeListener(handler);\n  }\n\n  /*\n   * Unsubscribes all handler functions from this event\n   * @return {Event} this\n   */\n  removeAllListeners() {\n    this._events = [];\n    this._onceEvents.clear();\n    return this;\n  }\n\n  /*\n   * Fires off an instance of this event with optional data\n   * @param {Type} [data] The data of the event\n   * @return {boolean} true if the event has any listeners, false otherwise\n   */\n  emit(data?: Type) {\n\n    if (this._emitterMode === EmitterMode.ALL_HANDLERS) {\n      // We start by creating a copy of handlers\n      // this is required to make sure that no handler modifies the\n      // underlying collection which could result in one or more\n      // handlers not being called\n      let copy = this.listeners();\n\n      for (let i = 0; i < copy.length; i++ ) {\n        let handler: any = copy[i] as any;\n        handler(data);\n      }\n    }\n    // Last handler only\n    else if (this._emitterMode === EmitterMode.LAST_HANDLER) {\n      let handler: any = this._events[this._events.length - 1];\n      if (handler) {\n        handler(data);\n      }\n      return !!handler;\n    }\n    // First handler only, return true if\n    else if (this._emitterMode === EmitterMode.FIRST_HANDLER) {\n      let handler: any = this._events[0];\n      if (handler) {\n        handler(data);\n      }\n      return !!handler;\n    }\n\n    return this._events.length > 0;\n  }\n\n\n  /*\n   * Sets mode to stack; event only emits to last subscriber\n   * @param {enum} mode of event to set\n   */\n  public setMode(mode:EmitterMode) {\n    if(!EmitterMode[mode]) {\n      throw new Error(\"Emitter mode of typed events must be ALL_HANDLERS, FIRST_HANDLER, or LAST_HANDLER\");\n    }\n    this._emitterMode = mode;\n  }\n\n  /*\n   * Waits for event to occur.\n   * @param {number} [timeoutMs=-1] Timeout while waiting for event\n   * @return {Promise<any>} Resolved with event payload or rejected with 'TIMEOUT' if times out\n   */\n  public waitFor(timeoutMs = -1): Promise<Type> {\n    return new Promise( (resolve, reject) => {\n      let timeoutHandle: any;\n\n      const eventHandler:any = (data:any) => {\n        if (timeoutHandle) {\n          clearTimeout(timeoutHandle);\n        }\n        resolve(data);\n      };\n\n      // Connect timeout handler\n      if (timeoutMs > 0) {\n        timeoutHandle = setTimeout(() => {\n          this.removeListener(eventHandler);\n          reject('TIMEOUT');\n        }, timeoutMs);\n      }\n\n      this.once(eventHandler);\n    });\n  }\n\n  /*\n   * Returns the number of listeners\n   * @returns {number}\n   */\n  listenerCount() {\n    return this._events.length;\n  }\n}","declare const uuid:any;\nexport function generateTransactionID() {\n    if(typeof process === 'object') {\n        const crypto = require('crypto');\n        const hashSource = 'hi' + process.hrtime();\n        return crypto.createHash('md5').update(hashSource).digest('hex');\n    }\n    return uuid.v4().split('-').join('');\n}","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  EMPTY_BUFFER: Buffer.alloc(0),\n  NOOP: () => {}\n};\n","module.exports = require(\"http\");","module.exports = require(\"crypto\");","'use strict';\n\nconst Limiter = require('async-limiter');\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst constants = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst EMPTY_BLOCK = Buffer.from([0x00]);\n\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kWriteInProgress = Symbol('write-in-progress');\nconst kPendingClose = Symbol('pending-close');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling\n   *     of server context takeover\n   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge\n   *     disabling of client context takeover\n   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support\n   *     for, or request, a custom client window size\n   * @param {Object} options.zlibDeflateOptions Options to pass to zlib on deflate\n   * @param {Object} options.zlibInflateOptions Options to pass to zlib on inflate\n   * @param {Number} options.threshold Size (in bytes) below which messages\n   *     should not be compressed\n   * @param {Number} options.concurrencyLimit The number of concurrent calls to\n   *     zlib\n   * @param {Boolean} isServer Create the instance in either server or client\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter({ concurrency });\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      if (this._inflate[kWriteInProgress]) {\n        this._inflate[kPendingClose] = true;\n      } else {\n        this._inflate.close();\n        this._inflate = null;\n      }\n    }\n    if (this._deflate) {\n      if (this._deflate[kWriteInProgress]) {\n        this._deflate[kPendingClose] = true;\n      } else {\n        this._deflate.close();\n        this._deflate = null;\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        var value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw(\n        Object.assign({}, this._options.zlibInflateOptions, { windowBits })\n      );\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n    this._inflate[kWriteInProgress] = true;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._inflate[kPendingClose]\n      ) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kWriteInProgress] = false;\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    if (!data || data.length === 0) {\n      process.nextTick(callback, null, EMPTY_BLOCK);\n      return;\n    }\n\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw(\n        Object.assign({}, this._options.zlibDeflateOptions, { windowBits })\n      );\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // `zlib.DeflateRaw` emits an `'error'` event only when an attempt to use\n      // it is made after it has already been closed. This cannot happen here,\n      // so we only add a listener for the `'data'` event.\n      //\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kWriteInProgress] = true;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      var data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._deflate[kPendingClose]\n      ) {\n        this._deflate.close();\n        this._deflate = null;\n      } else {\n        this._deflate[kWriteInProgress] = false;\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError][constants.kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[constants.kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","module.exports = require(\"https\");","module.exports = require(\"url\");","module.exports = require(\"events\");","'use strict';\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  const target = Buffer.allocUnsafe(totalLength);\n  var offset = 0;\n\n  for (var i = 0; i < list.length; i++) {\n    const buf = list[i];\n    buf.copy(target, offset);\n    offset += buf.length;\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\ntry {\n  const bufferUtil = require('bufferutil');\n  const bu = bufferUtil.BufferUtil || bufferUtil;\n\n  module.exports = {\n    mask(source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bu.mask(source, mask, output, offset, length);\n    },\n    unmask(buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bu.unmask(buffer, mask);\n    },\n    concat\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = { concat, mask: _mask, unmask: _unmask };\n}\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","var url = require(\"url\");\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar assert = require(\"assert\");\nvar Writable = require(\"stream\").Writable;\nvar debug = require(\"debug\")(\"follow-redirects\");\n\n// RFC7231§4.2.1: Of the request methods defined by this specification,\n// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.\nvar SAFE_METHODS = { GET: true, HEAD: true, OPTIONS: true, TRACE: true };\n\n// Create handlers that pass events from native requests\nvar eventHandlers = Object.create(null);\n[\"abort\", \"aborted\", \"error\", \"socket\", \"timeout\"].forEach(function (event) {\n  eventHandlers[event] = function (arg) {\n    this._redirectable.emit(event, arg);\n  };\n});\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  options.headers = options.headers || {};\n  this._options = options;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Validate input and shift parameters if necessary\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new Error(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new Error(\"Request body larger than maxBodyLength limit\"));\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (typeof data === \"function\") {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data and end\n  var currentRequest = this._currentRequest;\n  this.write(data || \"\", encoding, function () {\n    currentRequest.end(null, null, callback);\n  });\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"abort\", \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\", \"setTimeout\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new Error(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.substr(0, protocol.length - 1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var event in eventHandlers) {\n    /* istanbul ignore else */\n    if (event) {\n      request.on(event, eventHandlers[event]);\n    }\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var i = 0;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext() {\n      if (i < buffers.length) {\n        var buffer = buffers[i++];\n        request.write(buffer.data, buffer.encoding, writeNext);\n      }\n      else {\n        request.end();\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: response.statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n  var location = response.headers.location;\n  if (location && this._options.followRedirects !== false &&\n      response.statusCode >= 300 && response.statusCode < 400) {\n    // RFC7231§6.4: A client SHOULD detect and intervene\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\n    if (++this._redirectCount > this._options.maxRedirects) {\n      this.emit(\"error\", new Error(\"Max redirects exceeded.\"));\n      return;\n    }\n\n    // RFC7231§6.4: Automatic redirection needs to done with\n    // care for methods not known to be safe […],\n    // since the user might not wish to redirect an unsafe request.\n    // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates\n    // that the target resource resides temporarily under a different URI\n    // and the user agent MUST NOT change the request method\n    // if it performs an automatic redirection to that URI.\n    var header;\n    var headers = this._options.headers;\n    if (response.statusCode !== 307 && !(this._options.method in SAFE_METHODS)) {\n      this._options.method = \"GET\";\n      // Drop a possible entity and headers related to it\n      this._requestBodyBuffers = [];\n      for (header in headers) {\n        if (/^content-/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Drop the Host header, as the redirect might lead to a different host\n    if (!this._isRedirect) {\n      for (header in headers) {\n        if (/^host$/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Perform the redirected request\n    var redirectUrl = url.resolve(this._currentUrl, location);\n    debug(\"redirecting to\", redirectUrl);\n    Object.assign(this._options, url.parse(redirectUrl));\n    this._isRedirect = true;\n    this._performRequest();\n\n    // Discard the remainder of the response to avoid waiting for data\n    response.destroy();\n  }\n  else {\n    // The response is not a redirect; return it as-is\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    wrappedProtocol.request = function (options, callback) {\n      if (typeof options === \"string\") {\n        options = url.parse(options);\n        options.maxRedirects = exports.maxRedirects;\n      }\n      else {\n        options = Object.assign({\n          protocol: protocol,\n          maxRedirects: exports.maxRedirects,\n          maxBodyLength: exports.maxBodyLength,\n        }, options);\n      }\n      options.nativeProtocols = nativeProtocols;\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    };\n\n    // Executes a GET request, following redirects\n    wrappedProtocol.get = function (options, callback) {\n      var request = wrappedProtocol.request(options, callback);\n      request.end();\n      return request;\n    };\n  });\n  return exports;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n","module.exports = require(\"stream\");","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","module.exports = require(\"zlib\");","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","import ConnectionManager from './connection/ConnectionManager';\nimport IConnection, {MessageEvent} from './connection/IConnection';\nimport RequestToken from './tokens/RequestToken';\nimport { v1 } from './requests';\nimport Session = v1.session.Session;\nimport Attention = v1.expression.attention.Attention;\nimport LookAt = v1.expression.lookAt.LookAt;\nimport Display = v1.expression.display.Display;\nimport VideoPlayback = v1.expression.video.VideoPlayback;\nimport FaceTrack = v1.lps.face.FaceTrack;\nimport MotionTrack = v1.lps.motion.MotionTrack;\nimport HotWord = v1.listen.hotWord.HotWord;\nimport Listen = v1.listen.listen.Listen;\nimport Play = v1.expression.play.Play;\nimport Photo = v1.camera.photo.Photo;\nimport Video = v1.camera.video.Video;\nimport LoadAssets = v1.loadAssets.LoadAssets;\nimport UnloadAssets = v1.unloadAssets.UnloadAssets;\nimport HeadTouch = v1.sensory.headTouch.HeadTouch;\nimport GetConfig = v1.settings.getConfig.GetConfig;\nimport SetConfig = v1.settings.setConfig.SetConfig;\nimport ScreenGesture = v1.sensory.screenGesture.ScreenGesture;\nimport {typeguards} from '../jibo-command-protocol';\nimport {Event} from './events/Event';\nimport {generateTransactionID} from './UUID';\n\n/**\n * Entry point for the Remote Client Protocol.\n * @class Requester\n * @example\n * const requester = new Requester();\n * requester.disconnected.on((data) => {\n *     console.log('Connection closed because', data);\n * });\n * await requester.connect(robotName);\n */\nexport default class Requester {\n\n    /**\n     * @name Requester#attention\n     * @description Instance property on the Requester class. See {@link Requester.attention} namespace.\n     */\n    public attention:Attention;\n\n    /**\n     * @name Requester#lookAt\n     * @description Instance property on the Requester class. See {@link Requester.lookAt} namespace.\n     */\n    public lookAt:LookAt;\n\n    /**\n     * @name Requester#display\n     * @description Instance property on the Requester class. See {@link Requester.display} namespace.\n     */\n    public display:Display;\n    /**\n     * @name Requester#display\n     * @description Instance property on the Requester class. See {@link Requester.videoPlayback} namespace.\n     */\n    public videoPlayback:VideoPlayback;\n\n    /**\n     * @name Requester#faceTrack\n     * @description Instance property on the Requester class. See {@link Requester.faceTrack} namespace.\n     */\n    public faceTrack:FaceTrack;\n\n    /**\n     * @name Requester#motionTrack\n     * @description Instance property on the Requester class. See {@link Requester.motionTrack} namespace.\n     */\n    public motionTrack: MotionTrack;\n\n    /**\n     * @name Requester#play\n     * @description Instance property on the Requester class. See {@link Requester.play} namespace.\n     */\n    public play:Play;\n\n    /**\n     * @name Requester#photo\n     * @description Instance property on the Requester class. See {@link Requester.photo} namespace.\n     */\n    public photo:Photo;\n\n    /**\n     * @name Requester#video\n     * @description Instance property on the Requester class. See {@link Requester.video} namespace.\n     */\n    public video: Video;\n\n    /**\n     * @name Requester#listen\n     * @description Instance property on the Requster class. See {@link Requester.listen} namespace.\n     */\n    public listen: Listen;\n\n    /**\n     * @name Requester#hotWord\n     * @description Instance property on the Requester class. See {@link Requester.hotWord} namespace.\n     */\n    public hotWord: HotWord;\n\n    /**\n     * @name Requester#loadAssets\n     * @description Instance property on the Requester class. See {@link Requester.loadAssets} namespace.\n     */\n    public loadAssets:LoadAssets;\n\n    /**\n     * @name Requester#unloadAssets\n     * @description Instance property on the Requester class. See {@link Requester.unloadAssets} namespace.\n     */\n    public unloadAssets:UnloadAssets;\n\n    /**\n     * @name Requester#headTouch\n     * @description Instance property on the Requester class. See {@link Requester.headTouch} namespace.\n     */\n    public headTouch:HeadTouch;\n\n    /**\n     * @name Requester#getConfig\n     * @description Instance property on the Requester class. See {@link Requester.getConfig} namespace.\n     */\n    public getConfig:GetConfig;\n\n    /**\n     * @name Requester#setConfig\n     * @description Instance property on the Requester class. See {@link Requester.setConfig} namespace.\n     */\n    public setConfig: SetConfig;\n\n    /**\n     * @name Requester#screenGesture\n     * @description Instance property on the Requester class. See {@link Requester.screenGesture} namespace.\n     */\n    public screenGesture:ScreenGesture;\n\n    /**\n     * ID for the app.\n     * @name Requester#AppID\n     * @type string\n     */\n    public AppID:string;\n\n    /**\n     * Event emitted when the connection is closed by the robot or a connection issue.\n     * @name Requester#disconnected\n     * @type Event<number, string>\n     */\n    public disconnected: Event<{code:number, reason:string}>;\n\n    private session:Session;\n    private sessionId:string;\n    private robotVersion:string;\n    private connection:IConnection;\n    private robotName:string;\n    private inProgressTokens:Map<string, RequestToken<any, any>>;\n\n    // HACK for forward compatibility with new, published tookit module:\n    // \"@jibo/apptoolkit-library\": \"^0.1.5\"\n    public expression: any;\n    public config: any;\n    public perception: any;\n\n    constructor() {\n        this.robotVersion = '1.0';\n        this.AppID = '';\n        this.sessionId = '';\n        this.robotName = '';\n        this.inProgressTokens = new Map();\n        this.connection = new ConnectionManager();\n        this.connection.message.on(this.onMessage.bind(this));\n        this.connection.disconnected.on((data:any) => {\n            this.disconnected.emit({code:data.code, reason: data.reason});\n        });\n        this.attention = new Attention(this);\n        this.lookAt = new LookAt(this);\n        this.display = new Display(this);\n        this.videoPlayback = new VideoPlayback(this);\n        this.faceTrack = new FaceTrack(this);\n        this.motionTrack = new MotionTrack(this);\n        this.play = new Play(this);\n        this.photo = new Photo(this);\n        this.video = new Video(this);\n        this.loadAssets = new LoadAssets(this);\n        this.unloadAssets = new UnloadAssets(this);\n        this.listen = new Listen(this);\n        this.hotWord = new HotWord(this);\n        this.getConfig = new GetConfig(this);\n        this.setConfig = new SetConfig(this);\n        this.session = new Session(this);\n        this.headTouch = new HeadTouch(this);\n        this.screenGesture = new ScreenGesture(this);\n        this.disconnected = new Event('Disconnected');\n\n        // HACK for forward compatibility with new, published tookit module:\n        // \"@jibo/apptoolkit-library\": \"^0.1.5\"\n        this.expression = {\n            say: (prompt: string) => this.play.say(prompt),\n            look: (lookAtTarget: any) => {\n                if (lookAtTarget) {\n                    switch(lookAtTarget.type) { // lookAtTarget = { type: \"ANGLE\", angle: angleVector, levelHead: true};\n                        case 'ANGLE':\n                            let angleVector: any = lookAtTarget.angle; // {theta: command.data.angle, psi: 0};\n                            let angle: [number, number] = [angleVector.theta, 0]; // = [command.data.angle, 0];\n                            return this.lookAt.angle(angle);\n                            break;\n                        case 'POSITION':\n                            let vectorData: any = lookAtTarget.position; // {theta: command.data.angle, psi: 0};\n                            let vector: [number, number, number] = [vectorData.x, vectorData.y, vectorData.z]; // = [command.data.angle, 0];\n                            return this.lookAt.position(vector);\n                            break;\n                    }\n                }\n            },\n            setAttentionMode: (mode: string) => this.attention.setMode(mode as any),\n        }\n\n        this.config = {\n            set: (options: any) => {\n                if (options.mixer && !options.Mixer) options.Mixer = options.mixer;\n                return this.setConfig.set(options)\n            },\n        }\n\n        this.perception = {\n            subscribe: {\n                motion: () => this.motionTrack.trackMotions(),\n                face: () => this.faceTrack.trackFaces()\n            }\n        }\n\n        this.listen.subscribe.hotword = (listen: boolean = false) => this.hotWord.listen(listen);\n\n    }\n\n    /**\n     * Connect to the specific robot.\n     * @method Requester#connect\n     * @param  {string}        robotName your-friendly-robot-name\n     * @return {Promise<void>}\n     */\n    public connect(robotName:string,options: any):Promise<void> {\n\n        this.robotName = robotName;\n        // console.log('Requester : connect');\n        return (this.connection as ConnectionManager).connect(robotName, options)\n        .then(() => {\n            // console.log('Requester : connected, start session');\n            //eat result of connect, start session with robot\n            const token = this.session.startSession();\n            return token.complete.then((result) => {\n                // console.log('Requester : session started, result: ', result);\n                //get the session data that we need, then the connection is complete and robot is ready\n                this.robotVersion = result.ResponseBody.Version;\n                this.sessionId = result.ResponseBody.SessionID;\n            })\n            .catch((error: any) => {\n                console.log('Requester : connect: token: error:', error)\n            });\n        })\n        .catch((error: any) => {\n            console.log('Requester : connect: connection: error:', error)\n        });\n    }\n\n    /**\n     * Disconnect all active connections.\n     * @method Requester.disconnect\n     */\n    public disconnect():void {\n        this.connection.close();\n    }\n\n    /**\n     * Send request for the specified asset.\n     * @method Requester.sendAssetRequest\n     * @param {string}        uri      URI for the asset to request.\n     * @param {AssetCallback} callback `http.IncomingMessage`\n     */\n    // public sendAssetRequest(uri:string, callback:AssetCallback) {\n    //     this.connection.sendAssetRequestTo(this.robotName, uri, callback);\n    // }\n\n    private generateTransactionID():string {\n        return generateTransactionID();\n    }\n\n    /**\n     * @private\n     */\n    public sendRequest(command:JIBO.v1.BaseCommand):string {\n        //TODO: Actual current IP address here\n        const requestId = this.generateTransactionID();\n        const header:JIBO.v1.RequestHeader = {\n            TransactionID: requestId,\n            SessionID: this.sessionId,\n            Version: this.robotVersion,\n            Credentials: null,\n            AppID: this.AppID\n        };\n        //Send the request!\n        this.connection.sendTo(this.robotName, {\n            ClientHeader:header,\n            Command: command as any\n        });\n        //return the id to be applied to the token\n        return requestId;\n    }\n\n    /**\n     * @private\n     */\n    public sendToken(token:RequestToken<any>):void {\n        //Send the request!\n        token.requestId = this.sendRequest(token.protocol);\n        //Retain tokens as in progress requests, and handle their responses\n        if (!token.isComplete) {\n            this.inProgressTokens.set(token.requestId, token);\n        }\n    }\n\n    private onMessage(data: MessageEvent) {\n        const response = data.data;\n        let id:string | null= null;\n        let ack:JIBO.v1.Acknowledgement |null = null;\n        let event:JIBO.v1.EventMessage|null = null;\n        if (typeguards.isAcknowledgement(response)) {\n            id = response.ResponseHeader.TransactionID;\n            ack = response;\n        } else if(typeguards.isEvent(response)) {\n            id = response.EventHeader.TransactionID;\n            event = response;\n        } else {\n            //Invalid?\n            return;\n        }\n        //go through active tokens to see who gets what\n        if (this.inProgressTokens.has(id)) {\n            const token = this.inProgressTokens.get(id);\n            if (token) {\n                if (ack) {\n                    token.handleAck(ack);\n                } else {\n                    if (event) {\n                        token.handleEvent(event);\n                    }\n\n                }\n                if (token.isComplete) {\n                    this.inProgressTokens.delete(id);\n                }\n            }\n\n        }\n    }\n}\n","'use strict';\n\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst url = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst EventTarget = require('./event-target');\nconst extension = require('./extension');\nconst constants = require('./constants');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\n\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst kWebSocket = constants.kWebSocket;\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000; // Allow 30 seconds to terminate the connection cleanly.\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|url.Url|url.URL)} address The URL to which to connect\n   * @param {(String|String[])} protocols The subprotocols\n   * @param {Object} options Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this.readyState = WebSocket.CONNECTING;\n    this.protocol = '';\n\n    this._binaryType = constants.BINARY_TYPES[0];\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = '';\n    this._closeTimer = null;\n    this._closeCode = 1006;\n    this._extensions = {};\n    this._isServer = true;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      if (Array.isArray(protocols)) {\n        protocols = protocols.join(', ');\n      } else if (typeof protocols === 'object' && protocols !== null) {\n        options = protocols;\n        protocols = undefined;\n      }\n\n      initAsClient.call(this, address, protocols, options);\n    }\n  }\n\n  get CONNECTING() {\n    return WebSocket.CONNECTING;\n  }\n  get CLOSING() {\n    return WebSocket.CLOSING;\n  }\n  get CLOSED() {\n    return WebSocket.CLOSED;\n  }\n  get OPEN() {\n    return WebSocket.OPEN;\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the required\n   * default \"blob\" type (instead we define a custom \"nodebuffer\" type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (constants.BINARY_TYPES.indexOf(type) < 0) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return 0;\n\n    //\n    // `socket.bufferSize` is `undefined` if the socket is closed.\n    //\n    return (this._socket.bufferSize || 0) + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Number} maxPayload The maximum allowed message size\n   * @private\n   */\n  setSocket(socket, head, maxPayload) {\n    const receiver = new Receiver(\n      this._binaryType,\n      this._extensions,\n      maxPayload\n    );\n\n    this._sender = new Sender(socket, this._extensions);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this.readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    this.readyState = WebSocket.CLOSED;\n\n    if (!this._socket) {\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} code Status code explaining why the connection is closing\n   * @param {String} data A string explaining why the connection is closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();\n      return;\n    }\n\n    this.readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (this._socket.writable) {\n        if (this._closeFrameReceived) this._socket.end();\n\n        //\n        // Ensure that the connection is closed even if the closing handshake\n        // fails.\n        //\n        this._closeTimer = setTimeout(\n          this._socket.destroy.bind(this._socket),\n          closeTimeout\n        );\n      }\n    });\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      const err = new Error(\n        `WebSocket is not open: readyState ${this.readyState} ` +\n          `(${readyStates[this.readyState]})`\n      );\n\n      if (cb) return cb(err);\n      throw err;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || constants.EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      const err = new Error(\n        `WebSocket is not open: readyState ${this.readyState} ` +\n          `(${readyStates[this.readyState]})`\n      );\n\n      if (cb) return cb(err);\n      throw err;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || constants.EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      const err = new Error(\n        `WebSocket is not open: readyState ${this.readyState} ` +\n          `(${readyStates[this.readyState]})`\n      );\n\n      if (cb) return cb(err);\n      throw err;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    const opts = Object.assign(\n      {\n        binary: typeof data !== 'string',\n        mask: !this._isServer,\n        compress: true,\n        fin: true\n      },\n      options\n    );\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || constants.EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this.readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\nreadyStates.forEach((readyState, i) => {\n  WebSocket[readyStates[i]] = i;\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    /**\n     * Return the listener of the event.\n     *\n     * @return {(Function|undefined)} The event listener or `undefined`\n     * @public\n     */\n    get() {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n\n      return undefined;\n    },\n    /**\n     * Add a listener for the event.\n     *\n     * @param {Function} listener The listener to add\n     * @public\n     */\n    set(listener) {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = EventTarget.addEventListener;\nWebSocket.prototype.removeEventListener = EventTarget.removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {(String|url.Url|url.URL)} address The URL to which to connect\n * @param {String} protocols The subprotocols\n * @param {Object} options Connection options\n * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n * @param {Number} options.handshakeTimeout Timeout in milliseconds for the handshake request\n * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version` header\n * @param {String} options.origin Value of the `Origin` or `Sec-WebSocket-Origin` header\n * @param {Number} options.maxPayload The maximum allowed message size\n * @private\n */\nfunction initAsClient(address, protocols, options) {\n  options = Object.assign(\n    {\n      protocolVersion: protocolVersions[1],\n      perMessageDeflate: true,\n      maxPayload: 100 * 1024 * 1024\n    },\n    options,\n    {\n      createConnection: undefined,\n      socketPath: undefined,\n      hostname: undefined,\n      protocol: undefined,\n      timeout: undefined,\n      method: undefined,\n      auth: undefined,\n      host: undefined,\n      path: undefined,\n      port: undefined\n    }\n  );\n\n  if (protocolVersions.indexOf(options.protocolVersion) === -1) {\n    throw new RangeError(\n      `Unsupported protocol version: ${options.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  this._isServer = false;\n\n  var parsedUrl;\n\n  if (typeof address === 'object' && address.href !== undefined) {\n    parsedUrl = address;\n    this.url = address.href;\n  } else {\n    //\n    // The WHATWG URL constructor is not available on Node.js < 6.13.0\n    //\n    parsedUrl = url.URL ? new url.URL(address) : url.parse(address);\n    this.url = address;\n  }\n\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n\n  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {\n    throw new Error(`Invalid URL: ${this.url}`);\n  }\n\n  const isSecure =\n    parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';\n  const key = crypto.randomBytes(16).toString('base64');\n  const httpObj = isSecure ? https : http;\n  const path = parsedUrl.search\n    ? `${parsedUrl.pathname || '/'}${parsedUrl.search}`\n    : parsedUrl.pathname || '/';\n  var perMessageDeflate;\n\n  options.createConnection = isSecure ? tlsConnect : netConnect;\n  options.port = parsedUrl.port || (isSecure ? 443 : 80);\n  options.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  options.headers = Object.assign(\n    {\n      'Sec-WebSocket-Version': options.protocolVersion,\n      'Sec-WebSocket-Key': key,\n      Connection: 'Upgrade',\n      Upgrade: 'websocket'\n    },\n    options.headers\n  );\n  options.path = path;\n\n  if (options.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      options.perMessageDeflate !== true ? options.perMessageDeflate : {},\n      false,\n      options.maxPayload\n    );\n    options.headers['Sec-WebSocket-Extensions'] = extension.format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols) {\n    options.headers['Sec-WebSocket-Protocol'] = protocols;\n  }\n  if (options.origin) {\n    if (options.protocolVersion < 13) {\n      options.headers['Sec-WebSocket-Origin'] = options.origin;\n    } else {\n      options.headers.Origin = options.origin;\n    }\n  }\n  if (parsedUrl.auth) {\n    options.auth = parsedUrl.auth;\n  } else if (parsedUrl.username || parsedUrl.password) {\n    options.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = path.split(':');\n\n    options.socketPath = parts[0];\n    options.path = parts[1];\n  }\n\n  var req = (this._req = httpObj.get(options));\n\n  if (options.handshakeTimeout) {\n    req.setTimeout(options.handshakeTimeout, () =>\n      abortHandshake(this, req, 'Opening handshake has timed out')\n    );\n  }\n\n  req.on('error', (err) => {\n    if (this._req.aborted) return;\n\n    req = this._req = null;\n    this.readyState = WebSocket.CLOSING;\n    this.emit('error', err);\n    this.emitClose();\n  });\n\n  req.on('response', (res) => {\n    if (this.emit('unexpected-response', req, res)) return;\n\n    abortHandshake(this, req, `Unexpected server response: ${res.statusCode}`);\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    this.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the `upgrade`\n    // event.\n    //\n    if (this.readyState !== WebSocket.CONNECTING) return;\n\n    req = this._req = null;\n\n    const digest = crypto\n      .createHash('sha1')\n      .update(key + constants.GUID, 'binary')\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(this, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (protocols || '').split(/, */);\n    var protError;\n\n    if (!protocols && serverProt) {\n      protError = 'Server sent a subprotocol but none was requested';\n    } else if (protocols && !serverProt) {\n      protError = 'Server sent no subprotocol';\n    } else if (serverProt && protList.indexOf(serverProt) === -1) {\n      protError = 'Server sent an invalid subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(this, socket, protError);\n      return;\n    }\n\n    if (serverProt) this.protocol = serverProt;\n\n    if (perMessageDeflate) {\n      try {\n        const extensions = extension.parse(\n          res.headers['sec-websocket-extensions']\n        );\n\n        if (extensions[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n          this._extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        abortHandshake(this, socket, 'Invalid Sec-WebSocket-Extensions header');\n        return;\n      }\n    }\n\n    this.setSocket(socket, head, options.maxPayload);\n  });\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  //\n  // Override `options.path` only if `options` is a copy of the original options\n  // object. This is always true on Node.js >= 8 but not on Node.js 6 where\n  // `options.socketPath` might be `undefined` even if the `socketPath` option\n  // was originally set.\n  //\n  if (options.protocolVersion) options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n  options.servername = options.servername || options.host;\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket)} stream The request to abort or the\n *     socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket.readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream.abort();\n    stream.once('abort', websocket.emitClose.bind(websocket));\n    websocket.emit('error', err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {String} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n  websocket._socket.resume();\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  this[kWebSocket]._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._closeCode = err[constants.kStatusCode];\n  websocket.emit('error', err);\n  websocket._socket.destroy();\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message\n * @private\n */\nfunction receiverOnMessage(data) {\n  this[kWebSocket].emit('message', data);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, constants.NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('end', socketOnEnd);\n\n  websocket.readyState = WebSocket.CLOSING;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk and emitted synchronously in a single\n  // `'data'` event.\n  //\n  websocket._socket.read();\n  websocket._receiver.end();\n\n  this.removeListener('data', socketOnData);\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', constants.NOOP);\n\n  if (websocket) {\n    websocket.readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (Object.prototype.hasOwnProperty.call(dest, name)) dest[name].push(elem);\n  else dest[name] = [elem];\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = {};\n\n  if (header === undefined || header === '') return offers;\n\n  var params = {};\n  var mustUnescape = false;\n  var isEscaping = false;\n  var inQuotes = false;\n  var extensionName;\n  var paramName;\n  var start = -1;\n  var end = -1;\n\n  for (var i = 0; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 /* ' ' */ || code === 0x09 /* '\\t' */) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = {};\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = {};\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        var value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = {};\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, {});\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      var configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                var values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","'use strict';\n\nconst stream = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst bufferUtil = require('./buffer-util');\nconst validation = require('./validation');\nconst constants = require('./constants');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends stream.Writable\n */\nclass Receiver extends stream.Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {String} binaryType The type for binary data\n   * @param {Object} extensions An object containing the negotiated extensions\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor(binaryType, extensions, maxPayload) {\n    super();\n\n    this._binaryType = binaryType || constants.BINARY_TYPES[0];\n    this[constants.kWebSocket] = undefined;\n    this._extensions = extensions || {};\n    this._maxPayload = maxPayload | 0;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n\n      if (n >= buf.length) {\n        this._buffers.shift().copy(dst, dst.length - n);\n      } else {\n        buf.copy(dst, dst.length - n, 0, n);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    var err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002);\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(RangeError, 'RSV1 must be clear', true, 1002);\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(RangeError, 'invalid opcode 0', true, 1002);\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(RangeError, 'FIN must be set', true, 1002);\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(RangeError, 'Max payload size exceeded', false, 1009);\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    var data = constants.EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n      if (this._masked) bufferUtil.unmask(data, this._mask);\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its lenght is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(RangeError, 'Max payload size exceeded', false, 1009)\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        var data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = toBuffer(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(toBuffer(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data);\n      } else {\n        const buf = toBuffer(fragments, messageLength);\n\n        if (!validation.isValidUTF8(buf)) {\n          this._loop = false;\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('message', buf.toString());\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, '');\n        this.end();\n      } else if (data.length === 1) {\n        return error(RangeError, 'invalid payload length 1', true, 1002);\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!validation.isValidStatusCode(code)) {\n          return error(RangeError, `invalid status code ${code}`, true, 1002);\n        }\n\n        const buf = data.slice(2);\n\n        if (!validation.isValidUTF8(buf)) {\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('conclude', code, buf.toString());\n        this.end();\n      }\n\n      return;\n    }\n\n    if (this._opcode === 0x09) this.emit('ping', data);\n    else this.emit('pong', data);\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {(Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err[constants.kStatusCode] = statusCode;\n  return err;\n}\n\n/**\n * Makes a buffer from a list of fragments.\n *\n * @param {Buffer[]} fragments The list of fragments composing the message\n * @param {Number} messageLength The length of the message\n * @return {Buffer}\n * @private\n */\nfunction toBuffer(fragments, messageLength) {\n  if (fragments.length === 1) return fragments[0];\n  if (fragments.length > 1) return bufferUtil.concat(fragments, messageLength);\n  return constants.EMPTY_BUFFER;\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n","'use strict';\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  exports.isValidUTF8 =\n    typeof isValidUTF8 === 'object'\n      ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0\n      : isValidUTF8;\n} catch (e) /* istanbul ignore next */ {\n  exports.isValidUTF8 = () => true;\n}\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nexports.isValidStatusCode = (code) => {\n  return (\n    (code >= 1000 &&\n      code <= 1013 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n};\n","'use strict';\n\nconst crypto = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst bufferUtil = require('./buffer-util');\nconst validation = require('./validation');\nconst constants = require('./constants');\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {net.Socket} socket The connection socket\n   * @param {Object} extensions An object containing the negotiated extensions\n   */\n  constructor(socket, extensions) {\n    this._extensions = extensions || {};\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */\n  static frame(data, options) {\n    const merge = data.length < 1024 || (options.mask && options.readOnly);\n    var offset = options.mask ? 6 : 2;\n    var payloadLength = data.length;\n\n    if (data.length >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (data.length > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(data.length, 2);\n    } else if (payloadLength === 127) {\n      target.writeUInt32BE(0, 2);\n      target.writeUInt32BE(data.length, 6);\n    }\n\n    if (!options.mask) {\n      target[1] = payloadLength;\n      if (merge) {\n        data.copy(target, offset);\n        return [target];\n      }\n\n      return [target, data];\n    }\n\n    const mask = crypto.randomBytes(4);\n\n    target[1] = payloadLength | 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (merge) {\n      bufferUtil.mask(data, mask, target, offset, data.length);\n      return [target];\n    }\n\n    bufferUtil.mask(data, mask, data, 0, data.length);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {(Number|undefined)} code The status code component of the body\n   * @param {String} data The message component of the body\n   * @param {Boolean} mask Specifies whether or not to mask the message\n   * @param {Function} cb Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    var buf;\n\n    if (code === undefined) {\n      buf = constants.EMPTY_BUFFER;\n    } else if (\n      typeof code !== 'number' ||\n      !validation.isValidStatusCode(code)\n    ) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || data === '') {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      buf = Buffer.allocUnsafe(2 + Buffer.byteLength(data));\n      buf.writeUInt16BE(code, 0);\n      buf.write(data, 2);\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doClose, buf, mask, cb]);\n    } else {\n      this.doClose(buf, mask, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @private\n   */\n  doClose(data, mask, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x08,\n        mask,\n        readOnly: false\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPing, data, mask, readOnly, cb]);\n    } else {\n      this.doPing(data, mask, readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPing(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x09,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPong, data, mask, readOnly, cb]);\n    } else {\n      this.doPong(data, mask, readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPong(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x0a,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  send(data, options, cb) {\n    var opcode = options.binary ? 2 : 1;\n    var rsv1 = options.compress;\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (rsv1 && perMessageDeflate) {\n        rsv1 = data.length >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        fin: options.fin,\n        rsv1,\n        opcode,\n        mask: options.mask,\n        readOnly\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(data, {\n          fin: options.fin,\n          rsv1: false,\n          opcode,\n          mask: options.mask,\n          readOnly\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} compress Specifies whether or not to compress `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @param {Function} cb Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      this._deflating = false;\n\n      if (!this._socket.readable && !this._socket.writable) {\n        //\n        // The socket is closed. Clear the queue and bail out.\n        //\n        this._bufferedBytes = 0;\n        this._queue.length = 0;\n        return;\n      }\n\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[1].length;\n      params[0].apply(this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[1].length;\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} cb Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Converts an `ArrayBuffer` view into a buffer.\n *\n * @param {(DataView|TypedArray)} view The view to convert\n * @return {Buffer} Converted view\n * @private\n */\nfunction viewToBuffer(view) {\n  const buf = Buffer.from(view.buffer);\n\n  if (view.byteLength !== view.buffer.byteLength) {\n    return buf.slice(view.byteOffset, view.byteOffset + view.byteLength);\n  }\n\n  return buf;\n}\n","import * as v1 from './v1';\nimport * as v2 from './v2';\n\nexport {\n    v1,\n    v2\n};","/// <reference path=\"../typings/index.d.ts\" />\nimport { JiboConnection, ConnectionInfo, RobotInfo } from './connection/RobotConnection';\nimport Requester from './connection/jibo-command-requester/Requester';\n\nexport {\n    JiboConnection,\n    ConnectionInfo,\n    RobotInfo,\n    Requester\n}\n","// const request = require('request');\nimport axios from 'axios';\nimport { EventEmitter } from \"events\";\nimport { Requester } from './jibo-command-requester';\n\nexport interface ConnectionInfo {\n    clientId: string;\n    clientSecret: string;\n    port: number;\n}\n\nexport interface RobotInfo {\n    name: string;\n    serialName: string;\n    endpoint: string;\n    email: string;\n    password: string;\n    ip: string;\n    onConnected: any;\n    onDisconnected: any;\n}\n\nexport class JiboConnection extends EventEmitter {\n\n    static MAX_TRIES: number = 40;\n    static DEFAULT_PORT:number = 7160;\n    static DEV_ENDPOINT:string = \"dev-customer-portal.jibo.com\";\n    static STG_ENDPOINT:string = \"stg-customer-portal.jibo.com\";\n    static PREPROD_ENDPOINT:string = \"preprod-customer-portal.jibo.com\";\n    static PROD_ENDPOINT:string = \"portal.jibo.com\";\n    static ENVIRONMENT_OPTIONS: any = {\n        DEV_ENDPOINT: JiboConnection.DEV_ENDPOINT,\n        STG_ENDPOINT: JiboConnection.STG_ENDPOINT,\n        PREPROD_ENDPOINT: JiboConnection.PREPROD_ENDPOINT,\n        PROD_ENDPOINT: JiboConnection.PROD_ENDPOINT,\n    }\n\n    private _numTries: number = 0;\n    private _gotCertificate: boolean = false;\n    private _p12Certificate: string = \"\";\n    private _certificateFingerprint: string = \"\";\n    private _accessToken:string = \"\";\n    private _tokenType: string = \"\";\n    private _interval: any = null;\n    private _robotInfo: RobotInfo;\n    private _connectionInfo: ConnectionInfo;\n    private _connected: boolean = false;\n    private _requester?: Requester;\n    private _debugLogging: boolean = false;\n\n    constructor(robotInfo: RobotInfo, connectionInfo: ConnectionInfo) {\n        super();\n        this._robotInfo = robotInfo;\n        this._connectionInfo = connectionInfo;\n    }\n\n    connect(debugLogging: boolean = false): void {\n        this._debugLogging = debugLogging;\n        if (\n                this._robotInfo.serialName &&\n                this._robotInfo.endpoint &&\n                this._robotInfo.email &&\n                this._robotInfo.password &&\n                this._connectionInfo.clientId &&\n                this._connectionInfo.clientSecret &&\n                this._connectionInfo.port\n        ) {\n            this.login();\n        } else {\n            this.logError(`JiboConnection: constructor: unable to login`, this._robotInfo, this._connectionInfo);\n            this.statusMessage(`constructor: unable to login`);\n        }\n    }\n\n    login() {\n        let getTokenUri = `https://${this._robotInfo.endpoint}/token`;\n        let param = {\n            grant_type: \"password\",\n            client_id: this._connectionInfo.clientId,\n            client_secret: this._connectionInfo.clientSecret,\n\n            username: this._robotInfo.email,\n            password: this._robotInfo.password\n        }\n        axios({\n            method: 'post',\n            headers: {\n                \"User-Agent\": \"Mozilla/5.0\",\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            url: getTokenUri,\n            data: JSON.stringify(param)\n        })\n        .then((response: any) => {\n            this.logDebug(response.data);\n            let body_obj = response.data;\n            this.logDebug(body_obj);\n            this.statusMessage(`login(): success`);\n            this._accessToken = body_obj.access_token;\n            this._tokenType = body_obj.token_type;\n            this.getRobotList();\n        })\n        .catch((error: any) => {\n            this.logError(`Error: login`, error);\n            this.statusMessage(`Error: login(): ${error}`);\n        });\n    }\n\n    getRobotList() {\n        // this.logDebug(`JiboConnection: getRobotList: ${this._robotInfo.endpoint}`);\n        let getRobotListUri = `https://${this._robotInfo.endpoint}/rom/v1/robots`;\n\n        axios({\n            method: 'get',\n            headers: {\n                \"User-Agent\": \"Mozilla/5.0\",\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": this._tokenType + \" \" + this._accessToken\n            },\n            url: getRobotListUri\n        })\n        .then((response: any) => {\n            let body_obj = response.data;\n            // this.logDebug(body_obj);\n            this.statusMessage(`getRobotList(): success`);\n            this.logDebug(`JiboConnection: getRobotList: list: `, body_obj);\n            this.logDebug(`JiboConnection: getRobotList: should confirm that: ${this._robotInfo.serialName} is in\\n ${JSON.stringify(body_obj, null, 2)}`);\n            this.logDebug(`JiboConnection: getRobotList: using: ${this._robotInfo.serialName}`);\n            this.createCertificate();\n        })\n        .catch((error: any) => {\n            this.logError(error);\n            this.statusMessage(`getRobotList(): error: ${error}`);\n        });\n    }\n\n    createCertificate() {\n        // this.logDebug(`createCertificate: ${this._robotInfo.serialName}`);\n        let certificateCreationUri = `https://${this._robotInfo.endpoint}/rom/v1/certificates`;\n        let param = {\n            friendlyId: this._robotInfo.serialName\n        }\n        axios({\n            method: 'post',\n            headers: {\n                \"User-Agent\": \"Mozilla/5.0\",\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": this._tokenType + \" \" + this._accessToken\n            },\n            url: certificateCreationUri,\n            data: JSON.stringify(param)\n        })\n        .then((response: any) => {\n            this.statusMessage(`createCertificate(): success`);\n            this._robotInfo.ip = \"\";\n            this._numTries = 0;\n            this._gotCertificate = false;\n            this._p12Certificate = \"\";\n            this._certificateFingerprint = \"\";\n            this._interval = setInterval(this.retrieveCertificate.bind(this), 5000);\n        })\n        .catch((error: any) => {\n            this.logError(error);\n            this.statusMessage(`createCertificate(): error: ${error}`);\n        });\n    }\n\n    retrieveCertificate() {\n        // this.logDebug(`retrieveCertificate: ${this._robotInfo.serialName}`);\n        if(!this._gotCertificate && this._numTries++ < JiboConnection.MAX_TRIES) {\n\n            this.statusMessage(`retrieveCertificate(): attempt #: ${this._numTries}`);\n            let certificateRetrievalUri = `https://${this._robotInfo.endpoint}/rom/v1/certificates/client?friendlyId=${this._robotInfo.serialName}`;\n            this.logDebug(`certificateRetrievalUri: ${certificateRetrievalUri}`);\n\n            var CancelToken = axios.CancelToken;\n            var source = CancelToken.source();\n\n            axios({\n                method: 'get',\n                headers: {\n                    \"User-Agent\": \"Mozilla/5.0\",\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": this._tokenType + \" \" + this._accessToken\n                },\n                url: certificateRetrievalUri,\n                cancelToken: source.token\n            })\n            .then((response: any) => {\n                if (response.status == 200) {\n                    clearInterval(this._interval);\n                    this._gotCertificate = true;\n                    let body_obj = response.data;\n                    let connectionInfo = body_obj.data;\n                    this.logDebug(\"Recieved a certificate! Robot ip address: \" + connectionInfo.payload.ipAddress);\n                    // this.logDebug('robot ready!', JSON.stringify(connectionInfo, null, 2));\n                    this._robotInfo.ip                  = connectionInfo.payload.ipAddress;\n                    let key                         = connectionInfo.private;\n                    this._p12Certificate            = connectionInfo.cert;\n                    this._certificateFingerprint    = connectionInfo.fingerprint;\n                    this.logDebug(`retrieveCertificate: connecting to robot...`);\n                    this.statusMessage(`retrieveCertificate(): success: connecting to robot...`);\n                    this.connectToRobot(this._robotInfo.ip, key, this._p12Certificate, this._certificateFingerprint, (requester: Requester) => {\n                        this.logDebug(`retrieveCertificate: connected: `, requester);\n                    });\n\n                } else {\n                    this.logError(`retrieveCertificate(): response: code: ${response.status}`, response);\n                    this.statusMessage(`retrieveCertificate(): response: 404`);\n                    source.cancel('retrieveCertificate(): too many tries.');\n                }\n\n            })\n            .catch((error: any) => {\n                this.logError(error);\n                this.statusMessage(`retrieveCertificate(): error: ${error}`);\n            });\n        } else {\n            clearInterval(this._interval);\n            this.logDebug(`Tried ${this._numTries} times. Aborting.`);\n            this.statusMessage(`retrieveCertificate(): attempted ${this._numTries} times. Aborting.`);\n            if(!this._gotCertificate) {\n                this.logError(`Unable to retrieve a certificate. Aborting.`);\n                this.statusMessage(`Unable to retrieve a certificate. Aborting.`);\n                this._connected = false;\n                this._robotInfo.onDisconnected();\n            }\n        }\n    }\n\n    connectToRobot(ipAddress: string, key: string, cert: string, fingerprint: string, callback: any) {\n        const options = {\n            port: this._connectionInfo.port || JiboConnection.DEFAULT_PORT,\n            key: key,\n            cert: cert,\n            rejectUnauthorized: false,\n            perMessageDeflate: false,\n            fingerprint: fingerprint,\n        };\n\n        this._requester = new Requester();\n        this._requester.disconnected.on((data: any) => {\n            this.logError('JiboConnection: connectToRobot: Connection closed because', data);\n            this.statusMessage(`connectToRobot(): error: Connection closed because: ${JSON.stringify(data, null, 2)}`);\n            // process.exit();\n            this._connected = false;\n            this._robotInfo.onDisconnected();\n        });\n\n        this._requester.connect(ipAddress, options)\n            .then((result: any) => {\n                if (this._requester) {\n                    this._connected = true;\n                    this._robotInfo.onConnected(this._requester);\n\n                    this.logDebug('JiboConnection: connectToRobot: OK');\n                    this.statusMessage(`connectToRobot(): Connection: OK:`);\n                    if (callback) {\n                        callback(this._requester);\n                    }\n                } else {\n                    this.logDebug('JiboConnection: connectToRobot: requester is undefined');\n                    this.statusMessage(`connectToRobot(): Connection: requester is undefined`);\n                }\n                //this.sayHiAndDisconnect();\n            })\n            .catch((error: any) => {\n                this.logError('JiboConnection: connectToRobot: error', error);\n                this.statusMessage(`connectToRobot(): error: ${error}`);\n            });\n    }\n\n    // sayHiAndDisconnect() {\n    //     console.log(`sayHiAndDisconnect: `, this._requester)\n    //     if (this._requester) {\n    //         let p = this._requester.play.say(\"Howdy!\").complete;\n    //         p.then( () => {\n    //             console.log('sayHiAndDisconnect: ta-da!');\n    //             console.log('sayHiAndDisconnect: just hanging around for for 10 seconds...');\n    //             setTimeout(() => {\n    //                 if (this._requester) {\n    //                     console.log('sayHiAndDisconnect: disconnecting');\n    //                     this.disconnect();\n    //                 }\n    //             }, 10 * 1000);\n    //         });\n    //     }\n    //\n    // }\n\n    disconnect(): void {\n        if (this._requester && this._connected) {\n            this._requester.disconnect();\n            this._requester = undefined;\n            this._connected = false;\n            this._robotInfo.onDisconnected();\n            this.statusMessage(`disconnect()`);\n        }\n    }\n\n    get connected(): boolean {\n        return this._connected;\n    }\n\n    statusMessage(message: string, clearMessages: boolean=false): void {\n        this.emit('statusMessage', {message: message, subsystem: `JiboConnection <${this._robotInfo.name}>`, clearMessages: clearMessages});\n    }\n\n    logDebug(...args: any[]): void {\n        if (this._debugLogging) {\n            console.log.apply(this, args);\n            // var args = Array.prototype.slice.call(arguments);\n            // args.forEach((logItem: any) => {\n            //     console.log(logItem);\n            // });\n        }\n    }\n\n    logError(...args: any[]): void {\n        console.log.apply(this, args);\n        // var args = Array.prototype.slice.call(arguments);\n        // args.forEach((logItem: any) => {\n        //     console.log(logItem);\n        // });\n    }\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolve, reject) {\n    var data = config.data;\n    var headers = config.headers;\n    var timer;\n\n    // Set User-Agent (required by some servers)\n    // Only set header if it hasn't been set in config\n    // See https://github.com/axios/axios/issues/69\n    if (!headers['User-Agent'] && !headers['user-agent']) {\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = new Buffer(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = new Buffer(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var parsed = url.parse(config.url);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttps = protocol === 'https:';\n    var agent = isHttps ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method,\n      headers: headers,\n      agent: agent,\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        proxy = {\n          host: parsedProxyUrl.hostname,\n          port: parsedProxyUrl.port\n        };\n\n        if (parsedProxyUrl.auth) {\n          var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n          proxy.auth = {\n            username: proxyUrlAuth[0],\n            password: proxyUrlAuth[1]\n          };\n        }\n      }\n    }\n\n    if (proxy) {\n      options.hostname = proxy.host;\n      options.host = proxy.host;\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      options.port = proxy.port;\n      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;\n\n      // Basic proxy authorization\n      if (proxy.auth) {\n        var base64 = new Buffer(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n        options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n      }\n    }\n\n    var transport;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttps ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttps ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxContentLength && config.maxContentLength > -1) {\n      options.maxBodyLength = config.maxContentLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // Response has been received so kill timer that handles request timeout\n      clearTimeout(timer);\n      timer = null;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n      switch (res.headers['content-encoding']) {\n      /*eslint default-case:0*/\n      case 'gzip':\n      case 'compress':\n      case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n        stream = stream.pipe(zlib.createUnzip());\n\n        // remove the content-encoding in order to not confuse downstream operations\n        delete res.headers['content-encoding'];\n        break;\n      }\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString('utf8');\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted) return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout && !timer) {\n      timer = setTimeout(function handleRequestTimeout() {\n        req.abort();\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\n      }, config.timeout);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n","module.exports = require(\"assert\");","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [ 6, 2, 3, 4, 5, 1 ];\n\ntry {\n  var supportsColor = require('supports-color');\n  if (supportsColor && supportsColor.level >= 2) {\n    exports.colors = [\n      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,\n      69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,\n      135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,\n      172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,\n      205, 206, 207, 208, 209, 214, 215, 220, 221\n    ];\n  }\n} catch (err) {\n  // swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(process.stderr.fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = '\\u001b[3' + (c < 8 ? c : '8;5;' + c);\n    var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  } else {\n    return new Date().toISOString() + ' ';\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","module.exports = require(\"tty\");","module.exports = require(\"util\");","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","module.exports = require(\"os\");","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","export {default as Requester} from './Requester';\nexport * from './requests';\nimport * as enums from '../jibo-command-protocol';\nexport {enums};\nexport {Event} from './events/Event';\n","import {Event} from '../events/Event';\nimport {ConnectionEvent, DisconnectEvent, MessageEvent} from './IConnection';\nconst WSWebSocket = require('ws');\nconst PORT = 8160;\n\nexport interface HandshakeMessage {\n    type: 'handshake';\n    status: 'OK';\n    name: string;\n}\n\nexport interface ConnectionSettings {\n    hostname: string;\n    port?:number;\n    key?:string;\n    cert?:string;\n    fingerprint?:string;\n}\n\nexport default class ConnectionManager {\n    public connected: Event<ConnectionEvent>;\n    public disconnected: Event<DisconnectEvent>;\n    public message: Event<MessageEvent>;\n\n    private namedConnections: {[key: string]: WebSocket} | any;\n\n    constructor() {\n        // console.log(`ConnectionManager: constructor`);\n        this.onConnection = this.onConnection.bind(this);\n        this.onClose = this.onClose.bind(this);\n\n        this.namedConnections = {};\n        this.connected = new Event('Connected');\n        this.disconnected = new Event('Disconnected');\n        this.message = new Event('Message Received');\n    }\n\n    public connect(robotName:string, options:any):Promise<ConnectionEvent> {\n        // console.log(`ConnectionManager: connect:`, robotName, options);\n        if (this.isConnected(robotName)) {\n            return Promise.resolve({robot:robotName});\n        }\n\n        return new Promise((resolve, reject) => {\n            this.connected.on(resolve);\n            this.startWebSocket({hostname: robotName,...options}, (err:any) => {\n                // console.log(`ConnectionManager: connect: error`, err);\n                this.connected.off(resolve);\n                reject(err);\n            });\n        });\n    }\n\n    public close():void {\n        for (let robot in this.namedConnections) {\n            this.namedConnections[robot].close();\n        }\n        this.namedConnections = {};\n    }\n\n    public isConnected(name: string):boolean {\n        return name in this.namedConnections;\n    }\n\n    public sendTo(name: string, command: JIBO.v1.Command):void {\n        if (!this.isConnected(name)){\n            return;\n        }\n\n        //don't care about knowing when the send completes\n        this.namedConnections[name].send(JSON.stringify(command));\n    }\n\n    // public sendAssetRequestTo(name:string, uri:string, callback:AssetCallback) {\n    //     const http = require('http');\n    //     http.request({\n    //         hostname: name,\n    //         port: PORT,\n    //         path: uri,\n    //     }, callback).end();\n    // }\n\n    private startWebSocket(settings:ConnectionSettings, onError?: Function): void {\n        // console.log(`ConnectionManager: startWebSocket:`);\n        const {hostname} = settings;\n        let port = settings.port || PORT;\n        let protocol = settings.cert ? 'wss' : 'ws';\n        let connectionString: string = `${protocol}://${hostname}:${port}`;\n        let options = <any>{};\n        if (settings.cert) {\n            options.key = settings.key;\n            options.cert = settings.cert;\n            options.rejectUnauthorized = false;\n        }\n\n        if (this.namedConnections[hostname]) {\n            try {\n                this.namedConnections[hostname].close();\n            } catch (e) {\n                //this error would be odd, but we'll ignore it as it would be user (dev) facing\n            }\n            this.namedConnections[hostname] = null;\n        }\n        try {\n            let websocket:any;\n            if(typeof process === 'object') { // if running in node ?\n                websocket = this.namedConnections[hostname] = new WSWebSocket(connectionString, options);\n            }\n            else { // else if running in a browser ?\n                websocket = this.namedConnections[hostname] = new WebSocket(connectionString, options);\n            }\n\n            const errorCallback = (e:any):any => {\n                if (onError){\n                    onError(e);\n                }\n                websocket.onerror = () => { return; };\n                this.onClose(hostname, 0, 'Error in websocket');\n                websocket.removeEventListener(\"error\", errorCallback);\n            };\n            websocket.addEventListener(\"error\", errorCallback);\n\n            websocket.addEventListener('open', () => {\n                this.onConnection(hostname, websocket);\n            });\n\n            websocket.addEventListener('close', (e:any) => this.onClose(hostname, e.code, e.reason));\n\n        } catch (err) {\n            console.log(`ConnectionManager: startWebSocket: err:`, err);\n            this.namedConnections[hostname] = null;\n        }\n    }\n\n    private onConnection(hostname:string, ws: WebSocket): void {\n        // message from Jibo\n        this.connected.emit({ robot: hostname });\n        this.namedConnections[hostname] = ws;\n        ws.addEventListener('message', (message) => {\n            //for comaptibility between broswer and node\n            if ((message as any).data) { message = (message as any).data; }\n\n            //wait for handshake received to\n            let msg: any = JSON.parse(message.toString());\n            this.message.emit({robot:hostname, data: msg});\n        });\n    }\n\n    private onClose(robot: string, code:number, reason:string): void {\n        if (this.namedConnections[robot]) {\n            this.disconnected.emit({robot, code, reason});\n            this.namedConnections[robot].close();\n            this.namedConnections[robot] = null;\n        }\n    }\n}\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nmodule.exports = WebSocket;\n","module.exports = require(\"net\");","module.exports = require(\"tls\");","'use strict';\n\nfunction Queue(options) {\n  if (!(this instanceof Queue)) {\n    return new Queue(options);\n  }\n\n  options = options || {};\n  this.concurrency = options.concurrency || Infinity;\n  this.pending = 0;\n  this.jobs = [];\n  this.cbs = [];\n  this._done = done.bind(this);\n}\n\nvar arrayAddMethods = [\n  'push',\n  'unshift',\n  'splice'\n];\n\narrayAddMethods.forEach(function(method) {\n  Queue.prototype[method] = function() {\n    var methodResult = Array.prototype[method].apply(this.jobs, arguments);\n    this._run();\n    return methodResult;\n  };\n});\n\nObject.defineProperty(Queue.prototype, 'length', {\n  get: function() {\n    return this.pending + this.jobs.length;\n  }\n});\n\nQueue.prototype._run = function() {\n  if (this.pending === this.concurrency) {\n    return;\n  }\n  if (this.jobs.length) {\n    var job = this.jobs.shift();\n    this.pending++;\n    job(this._done);\n    this._run();\n  }\n\n  if (this.pending === 0) {\n    while (this.cbs.length !== 0) {\n      var cb = this.cbs.pop();\n      process.nextTick(cb);\n    }\n  }\n};\n\nQueue.prototype.onDone = function(cb) {\n  if (typeof cb === 'function') {\n    this.cbs.push(cb);\n    this._run();\n  }\n};\n\nfunction done() {\n  this.pending--;\n  this._run();\n}\n\nmodule.exports = Queue;\n","'use strict';\n\n/**\n * Class representing an event.\n *\n * @private\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was dispatched\n   */\n  constructor(type, target) {\n    this.target = target;\n    this.type = type;\n  }\n}\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(data, target) {\n    super('message', target);\n\n    this.data = data;\n  }\n}\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being closed\n   * @param {String} reason A human-readable string explaining why the connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(code, reason, target) {\n    super('close', target);\n\n    this.wasClean = target._closeFrameReceived && target._closeFrameSent;\n    this.reason = reason;\n    this.code = code;\n  }\n}\n\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */\nclass OpenEvent extends Event {\n  /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(target) {\n    super('open', target);\n  }\n}\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n * @private\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {Object} error The error that generated this event\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(error, target) {\n    super('error', target);\n\n    this.message = error.message;\n    this.error = error;\n  }\n}\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} method A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @public\n   */\n  addEventListener(method, listener) {\n    if (typeof listener !== 'function') return;\n\n    function onMessage(data) {\n      listener.call(this, new MessageEvent(data, this));\n    }\n\n    function onClose(code, message) {\n      listener.call(this, new CloseEvent(code, message, this));\n    }\n\n    function onError(error) {\n      listener.call(this, new ErrorEvent(error, this));\n    }\n\n    function onOpen() {\n      listener.call(this, new OpenEvent(this));\n    }\n\n    if (method === 'message') {\n      onMessage._listener = listener;\n      this.on(method, onMessage);\n    } else if (method === 'close') {\n      onClose._listener = listener;\n      this.on(method, onClose);\n    } else if (method === 'error') {\n      onError._listener = listener;\n      this.on(method, onError);\n    } else if (method === 'open') {\n      onOpen._listener = listener;\n      this.on(method, onOpen);\n    } else {\n      this.on(method, listener);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} method A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */\n  removeEventListener(method, listener) {\n    const listeners = this.listeners(method);\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i] === listener || listeners[i]._listener === listener) {\n        this.removeListener(method, listeners[i]);\n      }\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst http = require('http');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst extension = require('./extension');\nconst constants = require('./constants');\nconst WebSocket = require('./websocket');\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {String} options.host The hostname where to bind the server\n   * @param {Number} options.port The port where to bind the server\n   * @param {http.Server} options.server A pre-created HTTP/S server to use\n   * @param {Function} options.verifyClient An hook to reject connections\n   * @param {Function} options.handleProtocols An hook to handle protocols\n   * @param {String} options.path Accept only connections matching this path\n   * @param {Boolean} options.noServer Enable no server mode\n   * @param {Boolean} options.clientTracking Specifies whether or not to track clients\n   * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n   * @param {Number} options.maxPayload The maximum allowed message size\n   * @param {Function} callback A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = Object.assign(\n      {\n        maxPayload: 100 * 1024 * 1024,\n        perMessageDeflate: false,\n        handleProtocols: null,\n        clientTracking: true,\n        verifyClient: null,\n        noServer: false,\n        backlog: null, // use default (511 as implemented in net.js)\n        server: null,\n        host: null,\n        path: null,\n        port: null\n      },\n      options\n    );\n\n    if (options.port == null && !options.server && !options.noServer) {\n      throw new TypeError(\n        'One of the \"port\", \"server\", or \"noServer\" options must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, (ws) => {\n            this.emit('connection', ws, req);\n          });\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) this.clients = new Set();\n    this.options = options;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Close the server.\n   *\n   * @param {Function} cb Callback\n   * @public\n   */\n  close(cb) {\n    if (cb) this.once('close', cb);\n\n    //\n    // Terminate all associated clients.\n    //\n    if (this.clients) {\n      for (const client of this.clients) client.terminate();\n    }\n\n    const server = this._server;\n\n    if (server) {\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // Close the http server if it was internally created.\n      //\n      if (this.options.port != null) {\n        server.close(() => this.emit('close'));\n        return;\n      }\n    }\n\n    process.nextTick(emitClose, this);\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const version = +req.headers['sec-websocket-version'];\n    const extensions = {};\n\n    if (\n      req.method !== 'GET' ||\n      req.headers.upgrade.toLowerCase() !== 'websocket' ||\n      !req.headers['sec-websocket-key'] ||\n      (version !== 8 && version !== 13) ||\n      !this.shouldHandle(req)\n    ) {\n      return abortHandshake(socket, 400);\n    }\n\n    if (this.options.perMessageDeflate) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(req.headers['sec-websocket-extensions']);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        return abortHandshake(socket, 400);\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.connection.authorized || req.connection.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(extensions, req, socket, head, cb);\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @private\n   */\n  completeUpgrade(extensions, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    const key = crypto\n      .createHash('sha1')\n      .update(req.headers['sec-websocket-key'] + constants.GUID, 'binary')\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${key}`\n    ];\n\n    const ws = new WebSocket(null);\n    var protocol = req.headers['sec-websocket-protocol'];\n\n    if (protocol) {\n      protocol = protocol.trim().split(/ *, */);\n\n      //\n      // Optionally call external protocol selection handler.\n      //\n      if (this.options.handleProtocols) {\n        protocol = this.options.handleProtocols(protocol, req);\n      } else {\n        protocol = protocol[0];\n      }\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws.protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, this.options.maxPayload);\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => this.clients.delete(ws));\n    }\n\n    cb(ws);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server.emit('close');\n}\n\n/**\n * Handle premature socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {net.Socket} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  if (socket.writable) {\n    message = message || http.STATUS_CODES[code];\n    headers = Object.assign(\n      {\n        Connection: 'close',\n        'Content-type': 'text/html',\n        'Content-Length': Buffer.byteLength(message)\n      },\n      headers\n    );\n\n    socket.write(\n      `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n        Object.keys(headers)\n          .map((h) => `${h}: ${headers[h]}`)\n          .join('\\r\\n') +\n        '\\r\\n\\r\\n' +\n        message\n    );\n  }\n\n  socket.removeListener('error', socketOnError);\n  socket.destroy();\n}\n","import * as loadAssets from './LoadAssets';\nimport * as unloadAssets from './UnloadAssets';\nimport * as session from './Session';\nimport * as camera from './camera';\nimport * as expression from './expression';\nimport * as listen from './listen';\nimport * as lps from './lps';\nimport * as sensory from './sensory';\nimport * as settings from './settings';\n\nexport {\n    loadAssets,\n    unloadAssets,\n    session,\n    camera,\n    expression,\n    listen,\n    lps,\n    sensory,\n    settings\n};\n","import RequestToken from '../../tokens/RequestToken';\nimport Requester from '../../Requester';\nimport RequestAPI from '../RequestAPI';\nimport {CommandTypes, FetchAssetEvents} from '../../../jibo-command-protocol';\n\n/**\n * @class FetchAssetToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class FetchAssetToken extends RequestToken<JIBO.v1.FetchAssetRequest, JIBO.v1.FetchAssetEvent> {\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.FetchAssetRequest) {\n        super(owner, protocol);\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle event\n        const message = event.EventBody;\n        switch (message.Event) {\n            case FetchAssetEvents.AssetReady:\n                this.isComplete = true;\n                this._complete.resolve(message);\n                break;\n            case FetchAssetEvents.AssetFailed:\n                this.isComplete = true;\n                this._complete.reject(message);\n                break;\n        }\n    }\n}\n\n/**\n * Controls Jibo's Load asset management.\n * @namespace Requester.loadAssets\n */\nexport class LoadAssets extends RequestAPI<JIBO.v1.FetchAssetRequest, FetchAssetToken> {\n\n    /**\n     * Generate loadAsset Protocol\n     * @method Requester.loadAssets#generateProtocol\n     * @param {string} uri - URI of the asset to be fetched.\n     * @param {string} name - Name given to the asset for later reference (must be unique).\n     * @returns {FetchAssetRequest}\n     * @intdocs\n     */\n    static generateProtocol(uri: string, name: string): JIBO.v1.FetchAssetRequest {\n        return {\n            Type: CommandTypes.FetchAsset,\n            URI: uri,\n            Name: name\n        };\n    }\n\n    /**\n     * Command to retrieve external asset and store in local cache by name.\n     * @method Requester.loadAssets#fetchAsset\n     * @param  {string}   uri Uri where the asset to fetch is.\n     * @param  {string}   name Name that the asset will be call by.\n     * @return {FetchAssetToken}\n     */\n    public fetchAsset(uri:string, name: string):FetchAssetToken {\n        const protocol = LoadAssets.generateProtocol(uri, name);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.loadAssets#generateToken\n     * @description Create FetchAssetToken from FetchAssetRequest protocol.\n     * @param {FetchAssetRequest} protocol - FetchAssetRequest protocol to generate a FetchAssetToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated FetchAssetToken should also be sent as a request.\n     * @return {FetchAssetToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.FetchAssetRequest, andSend=false): FetchAssetToken {\n        const token = new FetchAssetToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send FetchAssetToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.loadAssets#sendToken\n     * @param {FetchAssetToken} token - FetchAssetToken to send.\n     * @intdocs\n     */\n    public sendToken(token: FetchAssetToken): void {\n        this.owner.sendToken(token);\n    }\n}\n","export default class ExternalPromise<T> {\n    public resolve!: (d?: T) => any;\n    public reject!: (err?: any) => any;\n    public promise: Promise<T>;\n\n    constructor() {\n        this.promise = new Promise<T>((res, rej) => {\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}","/**\n * Enum of TakePhoto events.\n * @intdocs\n * @typedef PhotoEvents\n * @prop TakePhoto `onTakePhoto`\n */\nexport const PhotoEvents: {\n    TakePhoto: JIBO.v1.PhotoEvents.TakePhoto;\n} = {\n    TakePhoto: 'onTakePhoto'\n};\n\n/**\n * Enum of video events\n * @typedef VideoEvents\n * @intdocs\n * @prop VideoReady `onVideoReady`\n */\nexport const VideoEvents: {\n    VideoReady: JIBO.v1.VideoEvents.VideoReady;\n} = {\n    VideoReady: 'onVideoReady'\n};\n\n/**\n * @description Enum of skill disconnect reasons\n * @typedef DisconnectReason\n * @prop 4000 Skill closed by user\n * @prop 4001 Skill closed due to robot error\n * @prop 4002 Incoming connection is replacing previous connection\n * @prop 4003 Connection closed due to inactivity\n * @prop 4004 Session closed due to reconnection time out\n * @prop 4005 Session closed due to failed reconnection\n */\nexport const DisconnectReason:JIBO.v1.DisconnectReason = {\n    4000: 'Skill closed by user',\n    4001: 'Skill closed due to robot error',\n    4002: 'Incoming connection is replacing previous connection',\n    4003: 'Connection closed due to inactivity',\n    4004: 'Session closed due to reconnection time out',\n    4005: 'Session closed due to failed reconnection'\n};\n\n/**\n * Enum of websocket close codes\n * @typedef DisconnectCode\n * @intdocs\n * @prop HeadTouchExit `4000` - The Remote skill was exited via head touch on robot\n * @prop RobotError `4001` - The Remote skill was exited due to an error on the robot resulting in the error display taking over.\n * @prop NewConnection `4002` - A new Remote connection is superseding the existing one.\n * @prop InactivityTimeout `4003` - The connection was closed due to inactivity (no commands sent)\n * @prop ReconnectTimeout `4004` - Session timed out waiting for reconnect\n * @prop ReconnectError `4005` - Session unable to wait for a reconnect\n */\nexport const DisconnectCode: {\n    HeadTouchExit: JIBO.v1.DisconnectCodes.HeadTouchExit;\n    RobotError: JIBO.v1.DisconnectCodes.RobotError;\n    NewConnection: JIBO.v1.DisconnectCodes.NewConnection;\n    InactivityTimeout: JIBO.v1.DisconnectCodes.InactivityTimeout;\n    ReconnectTimeout: JIBO.v1.DisconnectCodes.ReconnectTimeout;\n    ReconnectError: JIBO.v1.DisconnectCodes.ReconnectError;\n} = {\n    HeadTouchExit: 4000,\n    RobotError: 4001,\n    NewConnection: 4002,\n    InactivityTimeout: 4003,\n    ReconnectTimeout: 4004,\n    ReconnectError: 4005,\n};\n\n/**\n * @typedef ResponseStrings\n * @intdocs\n * @description Maps the [Response Code]{@link ResponseCode} numbers to their strings (i.e. `200` = `OK`, `404` = `NotFound`, etc).\n */\nexport const ResponseStrings:JIBO.v1.ResponseStrings = {\n    200: 'OK',\n    201: 'Created',\n    202: 'Accepted',\n    400: 'Bad Request',\n    403: 'Forbidden',\n    404: 'Not Found',\n    406: 'Not Acceptable',\n    407: 'Request Timeout',\n    409: 'Conflict',\n    412: 'Precondition Failed',\n    500: 'Internal Error',\n    503: 'Service Unavailable',\n    505: 'Version Not Supported',\n    506: 'Version Conflict'\n};\n\n/**\n * Enum of Jibo's available attention modes.\n * @typedef AttentionMode\n * @prop Off\n * @prop Idle\n * @prop Disengage\n * @prop Engaged\n * @prop Speaking\n * @prop Fixated\n * @prop Attractable\n * @prop Menu\n * @prop Command\n */\nexport const AttentionMode: {\n    Off:JIBO.v1.AttentionModes.Off;\n    Idle:JIBO.v1.AttentionModes.Idle;\n    Disengage:JIBO.v1.AttentionModes.Disengage;\n    Engaged:JIBO.v1.AttentionModes.Engaged;\n    Speaking:JIBO.v1.AttentionModes.Speaking;\n    Fixated:JIBO.v1.AttentionModes.Fixated;\n    Attractable: JIBO.v1.AttentionModes.Attractable;\n    Menu :JIBO.v1.AttentionModes.Menu;\n    Command:JIBO.v1.AttentionModes.Command;\n} = {\n    Off:'OFF',\n    Idle:'IDLE',\n    Disengage:'DISENGAGE',\n    Engaged:'ENGAGED',\n    Speaking:'SPEAKING',\n    Fixated:'FIXATED',\n    Attractable: 'ATTRACTABLE',\n    Menu :'MENU',\n    Command:'COMMAND'\n};\n\n/**\n * @typedef CommandTypes\n * @intdocs\n * @description Enum of command types.\n * @prop StartSession\n * @prop GetConfig\n * @prop SetConfig\n * @prop Cancel\n * @prop Display\n * @prop SetAttention\n * @prop Say\n * @prop Listen\n * @prop LookAt\n * @prop TakePhoto\n * @prop Video\n * @prop Subscribe\n * @prop FetchAsset\n * @prop VideoPlayback\n * @prop UnloadAsset\n */\nexport const CommandTypes: {\n        StartSession: JIBO.v1.Commands.StartSession;\n        GetConfig: JIBO.v1.Commands.GetConfig;\n        SetConfig: JIBO.v1.Commands.SetConfig;\n        Cancel: JIBO.v1.Commands.Cancel;\n        Display: JIBO.v1.Commands.Display;\n        SetAttention: JIBO.v1.Commands.SetAttention;\n        Say: JIBO.v1.Commands.Say;\n        Listen: JIBO.v1.Commands.Listen;\n        LookAt: JIBO.v1.Commands.LookAt;\n        TakePhoto: JIBO.v1.Commands.TakePhoto;\n        Video: JIBO.v1.Commands.Video;\n        Subscribe: JIBO.v1.Commands.Subscribe;\n        FetchAsset: JIBO.v1.Commands.FetchAsset;\n        VideoPlayback: JIBO.v1.Commands.VideoPlayback;\n        UnloadAsset: JIBO.v1.Commands.UnloadAsset;\n\n} = {\n    StartSession: 'StartSession',\n    GetConfig: 'GetConfig',\n    SetConfig: 'SetConfig',\n    Cancel: 'Cancel',\n    Display: 'Display',\n    SetAttention: 'SetAttention',\n    Say: 'Say',\n    Listen: 'Listen',\n    LookAt: 'LookAt',\n    TakePhoto: 'TakePhoto',\n    Video: 'Video',\n    Subscribe: 'Subscribe',\n    FetchAsset: 'FetchAsset',\n    VideoPlayback: 'VideoPlayback',\n    UnloadAsset: 'UnloadAsset'\n};\n\n/**\n * Enum of async command events.\n * @typedef AsyncCommandEvent\n * @intdocs\n * @prop Start `onStart` - Asynchronous command has started.\n * @prop Stop `onStop` - Asynchronous command has stopped.\n * @prop Error `onError` - An attempt to move from Requested to Start resulted in an Error.\n */\nexport const AsyncCommandEvent:{\n    Start:JIBO.v1.AsyncCommandEvents.Start;\n    Stop:JIBO.v1.AsyncCommandEvents.Stop;\n    Error:JIBO.v1.AsyncCommandEvents.Error;\n} = {\n    Start: \"onStart\",\n    Stop: \"onStop\",\n    Error: \"onError\",\n};\n\n/**\n * Enum of display events.\n * @typedef DisplayEvents\n * @intdocs\n * @prop ViewStateChange `onViewStateChange`\n */\nexport const DisplayEvents:{\n    ViewStateChange: JIBO.v1.DisplayEvents.ViewStateChange;\n} = {\n    ViewStateChange: 'onViewStateChange'\n};\n\n/**\n * Enum of possible view states\n * @intdocs\n * @typedef ViewStates\n * @prop Opened\n * @prop Closed\n */\nexport const ViewStates: {\n    Opened: JIBO.v1.ViewStates.Opened;\n    Closed: JIBO.v1.ViewStates.Closed;\n} = {\n    Opened: 'Opened',\n    Closed: 'Closed'\n};\n\n/**\n * @typedef DisplayViewType\n * @description Enum of available display types\n * @prop Eye Display Jibo's eye on screen.\n * @prop Text Display text on screen.\n * @prop Image Display an image on screen.\n */\nexport const DisplayViewType: {\n    Eye:JIBO.v1.DisplayViews.Eye;\n    Text:JIBO.v1.DisplayViews.Text;\n    Image:JIBO.v1.DisplayViews.Image;\n} = {\n    Eye: 'Eye',\n    Text: 'Text',\n    Image: 'Image',\n};\n\n/**\n * @typedef LookAtEvents\n * @intdocs\n * @prop LookAtAchieved `onLookAtAchieved`\n * @prop TrackEntityLost `onTrackEntityLost`\n */\nexport const LookAtEvents: {\n    LookAtAchieved: JIBO.v1.LookAtEvents.LookAtAchieved;\n    TrackEntityLost: JIBO.v1.LookAtEvents.TrackEntityLost;\n} = {\n    LookAtAchieved: 'onLookAtAchieved',\n    TrackEntityLost: 'onTrackEntityLost'\n};\n\n/**\n * Enum of speech events.\n * @intdocs\n * @typedef HotWordEvents\n * @prop HotWordHeard `onHotWordHeard`\n * @prop ListenResult `onListenResult`\n */\nexport const HotWordEvents: {\n    HotWordHeard:JIBO.v1.HotWordEvents.HotWordHeard;\n    ListenResult:JIBO.v1.HotWordEvents.ListenResult;\n} = {\n    HotWordHeard: 'onHotWordHeard',\n    ListenResult: 'onListenResult'\n};\n\n/**\n * @typedef StreamTypes\n * @intdocs\n * @description Enum of stream types.\n * @prop Entity\n * @prop Speech\n * @prop HeadTouch\n * @prop Motion\n * @prop ScreenGesture\n */\nexport const StreamTypes: {\n        Entity:JIBO.v1.Streams.Entity;\n        HotWord:JIBO.v1.Streams.HotWord;\n        HeadTouch:JIBO.v1.Streams.HeadTouch;\n        Motion:JIBO.v1.Streams.Motion;\n        ScreenGesture:JIBO.v1.Streams.ScreenGesture;\n} = {\n    Entity: 'Entity',\n    HotWord: 'HotWord',\n    HeadTouch: 'HeadTouch',\n    Motion: 'Motion',\n    ScreenGesture: 'ScreenGesture'\n};\n\n/**\n * @typedef ListenEvents\n * @intdocs\n * @description Enum of listen events.\n * @prop ListenResult `onListenResult`\n */\nexport const ListenEvents: {\n    ListenResult: JIBO.v1.ListenEvents.ListenResult\n} = {\n    ListenResult: 'onListenResult'\n};\n\n/**\n * @typedef ListenStopReasons\n * @intdocs\n * @description Enum of unsuccessful listen stop reasons.\n * @prop NoInput `NoInput`\n * @prop NoMatch `NoMatch`\n * @prop Interrupted `Interrupted`\n */\nexport const ListenStopReasons: {\n    NoInput: JIBO.v1.ListenStopReasons.NoInput,\n    NoMatch: JIBO.v1.ListenStopReasons.NoMatch,\n    Interrupted: JIBO.v1.ListenStopReasons.Interrupted,\n} = {\n    NoInput: 'NoInput',\n    NoMatch: 'NoMatch',\n    Interrupted: 'Interrupted'\n};\n\n/**\n * Enum of entity track events.\n * @intdocs\n * @typedef EntityTrackEvents\n * @prop TrackUpdate `onEntityUpdate`\n * @prop TrackLost `onEntityLost`\n * @prop TrackGained `onEntityGained`\n */\nexport const EntityTrackEvents: {\n    TrackUpdate: JIBO.v1.EntityTrackEvents.TrackUpdate;\n    TrackLost: JIBO.v1.EntityTrackEvents.TrackLost;\n    TrackGained: JIBO.v1.EntityTrackEvents.TrackGained;\n} = {\n    TrackUpdate: 'onEntityUpdate',\n    TrackLost: 'onEntityLost',\n    TrackGained: 'onEntityGained',\n};\n\n/**\n * Enum of motion track events.\n * @intdocs\n * @typedef MotionEvents\n * @prop MotionDetected `onMotionDetected`\n */\nexport const MotionEvents: {\n    MotionDetected: JIBO.v1.MotionEvents.MotionDetected;\n} = {\n    MotionDetected: 'onMotionDetected'\n};\n\n/**\n * Enum of headtouch events.\n * @intdocs\n * @typedef HeadTouchEvents\n * @prop HeadTouched `onHeadTouch`\n */\nexport const HeadTouchEvents: {\n    HeadTouched: JIBO.v1.HeadTouchEvents.HeadTouched;\n} = {\n    HeadTouched: 'onHeadTouch'\n};\n\n/**\n * Enum of screen gesture events.\n * @intdocs\n * @typedef ScreenGestureEvents\n * @prop Tap `onTap`\n * @prop Swipe `onSwipe`\n */\nexport const ScreenGestureEvents: {\n    Tap:JIBO.v1.ScreenGestureEvents.Tap;\n    Swipe:JIBO.v1.ScreenGestureEvents.Swipe;\n} = {\n    Tap: 'onTap',\n    Swipe: 'onSwipe'\n};\n\n/**\n * Enum of config events.\n * @intdocs\n * @typedef ConfigEvents\n * @prop onConfig `onConfig`\n */\nexport const ConfigEvents: {\n    onConfig: JIBO.v1.ConfigEvents.onConfig\n} = {\n    onConfig: 'onConfig'\n};\n\n\n/**\n * Enum of asset events.\n * @intdocs\n * @typedef FetchAssetEvents\n * @prop AssetReady `onAssetReady`\n * @prop AssetFailed `onAssetFailed`\n */\nexport const FetchAssetEvents: {\n    AssetReady: JIBO.v1.FetchAssetEvents.AssetReady;\n    AssetFailed: JIBO.v1.FetchAssetEvents.AssetFailed;\n} = {\n    AssetReady: 'onAssetReady',\n    AssetFailed: 'onAssetFailed'\n};\n\n\n/**\n * Enum of unload asset events.\n * @intdocs\n * @typedef UnloadAssetEvents\n * @prop UnloadAssetFailed `onUnloadAssetFailed`\n * @prop UnloadAssetDone `onUnloadAssetDone`\n */\nexport const UnloadAssetEvents: {\n    UnloadAssetDone: JIBO.v1.UnloadAssetEvents.UnloadAssetDone;\n    UnloadAssetFailed: JIBO.v1.UnloadAssetEvents.UnloadAssetFailed;\n} = {\n    UnloadAssetDone: 'onUnloadAssetDone',\n    UnloadAssetFailed: 'onUnloadAssetFailed'\n};\n\n/**\n * @typedef CameraResolution\n * @description Enum of camera resolutions\n * @prop HighRes Currently unsupported\n * @prop MedRes Higher res than default\n * @prop LowRes Default\n * @prop MicroRes Lower res than default\n */\nexport const CameraResolution: {\n    HighRes: JIBO.v1.CameraResolutions.HighRes;\n    MedRes: JIBO.v1.CameraResolutions.MedRes;\n    LowRes: JIBO.v1.CameraResolutions.LowRes;\n    MicroRes: JIBO.v1.CameraResolutions.MicroRes;\n} = {\n    HighRes: 'highRes',\n    MedRes: 'medRes',\n    LowRes: 'lowRes',\n    MicroRes: 'microRes'\n};\n\n/**\n * Enum of available swipe directions.\n * @typedef SwipeDirection\n * @prop Up\n * @prop Down\n * @prop Right\n * @prop Left\n */\nexport const SwipeDirection: {\n    Up: JIBO.v1.SwipeDirections.Up;\n    Down: JIBO.v1.SwipeDirections.Down;\n    Right: JIBO.v1.SwipeDirections.Right;\n    Left: JIBO.v1.SwipeDirections.Left;\n} = {\n    Up: 'Up',\n    Down: 'Down',\n    Right: 'Right',\n    Left: 'Left'\n};\n\n/**\n * Camera options.\n * @typedef Camera\n * @prop left Default\n * @prop right Currently unsupported\n */\nexport const Camera: {\n    Left: JIBO.v1.Cameras.Left;\n    Right: JIBO.v1.Cameras.Right;\n} = {\n    Left: 'left',\n    Right: 'right'\n};\n\n/**\n * Enum of entity (face) types.\n * @typedef EntityType\n * @prop person Face is a loop member.\n * @prop unknown Face is not a loop member.\n */\nexport const EntityType: {\n    Person: JIBO.v1.Entities.Person;\n    Unknown: JIBO.v1.Entities.Unknown;\n} = {\n    Person: 'person',\n    Unknown: 'unknown'\n};\n\n/**\n * @typedef DisplayErrorDetails\n * @intdocs\n * @prop IdNotUnique View id is not unique\n * @prop MissingValues View was not given required values\n * @prop InvalidViewType View type is not valid\n * @prop AssetError Unable to access assets for display\n */\nexport const DisplayErrorDetails:JIBO.v1.DisplayErrorDetails = {\n    IdNotUnique: 'View id is not unique',\n    //response code 406 (NotAcceptable)\n    MissingValues: 'View was not given required values',\n    //response code 406 (NotAcceptable)\n    InvalidViewType: 'View type is not valid',\n    //response code 400 (BadRequest)\n    AssetError: 'Unable to access assets for display',\n};\n\n/**\n * @typedef DisplayChangeType\n * @description Enum of ways to change display\n * @prop Swap Swap the current view for another\n */\nexport const DisplayChangeType: {\n    Swap: JIBO.v1.DisplayChanges.Swap;\n} = {\n    Swap: 'Swap'\n};\n\n/**\n * @typedef FetchAssetErrorDetails\n * @intdocs\n * @prop OutOfMemory {string} [Response Code]{@link ResponseCode}\n *       406 (NotAcceptable) - Out of memory\n * @prop InvalidURI {string} [Response Code]{@link ResponseCode}\n *       406 (NotAcceptable) - Invalid or Inaccessible URI\n */\nexport const FetchAssetErrorDetails:JIBO.v1.FetchAssetErrorDetails = {\n    OutOfMemory: 'Out of memory',\n    InvalidURI: 'Invalid or Inaccessible URI'\n};\n\n/**\n * @typedef UnloadAssetErrorDetails\n * @intdocs\n * @prop InvalidName {string}\n *       406 (NotAcceptable) - Invalid or Inaccessible Name\n */\nexport const UnloadAssetErrorDetails:JIBO.v1.UnloadAssetErrorDetails = {\n    InvalidName: 'Invalid or Inaccessible Name'\n};\n/**\n * @typedef ResponseCode\n * @description Enum of response codes\n * @prop OK `200` - The command was accepted and executed. Synchronous calls only.\n * @prop Created `201` - The command was accepted and executed. Synchronous calls only.\n * @prop Accepted `202` - The command was accepted and will begin execution. Most asynchronous commands will get a this response.\n * @prop BadRequest `400` - Badly formatted request.\n * @prop Forbidden `403` - The command request is not a supported command.\n * @prop NotFound `404` - Command not found.\n * @prop NotAcceptable `406` - The data in the command is not acceptable.\n * @prop RequestTimeout `407 - Unable to marshal the resources and set up the command within the time limits set in the Controller.\n * @prop Conflict `409` - There is a conflicting command already executing\n * @prop PreconditionFailed `412` - The execution of the command requires the execution of a prior command.\n * @prop InternalError `500` - The Controller has crashed or hit a different error that was unexpected.\n * @prop ServiceUnavailable `503` - The Controller is temporarily unavailable. The Robot SSM may be rebooting something.\n * @prop VersionNotSupported `505` - The Version requested is not supported.\n * @prop VersionConflict `506` - The Version requested is not the same version of the current connection.\n */\nexport const ResponseCode: {\n    OK: JIBO.v1.ResponseCodes.OK;\n    Created: JIBO.v1.ResponseCodes.Created;\n    Accepted: JIBO.v1.ResponseCodes.Accepted;\n    BadRequest: JIBO.v1.ResponseCodes.BadRequest;\n    Forbidden: JIBO.v1.ResponseCodes.Forbidden;\n    NotFound: JIBO.v1.ResponseCodes.NotFound;\n    NotAcceptable: JIBO.v1.ResponseCodes.NotAcceptable;\n    RequestTimeout: JIBO.v1.ResponseCodes.RequestTimeout;\n    Conflict: JIBO.v1.ResponseCodes.Conflict;\n    PreconditionFailed: JIBO.v1.ResponseCodes.PreconditionFailed;\n    InternalError: JIBO.v1.ResponseCodes.InternalError;\n    ServiceUnavailable: JIBO.v1.ResponseCodes.ServiceUnavailable;\n    VersionNotSupported: JIBO.v1.ResponseCodes.VersionNotSupported;\n    VersionConflict: JIBO.v1.ResponseCodes.VersionConflict;\n} = {\n    OK: 200,\n    Created: 201,\n    Accepted: 202,\n    BadRequest: 400,\n    Forbidden: 403,\n    NotFound: 404,\n    NotAcceptable: 406,\n    RequestTimeout: 407,\n    Conflict: 409,\n    PreconditionFailed: 412,\n    InternalError: 500,\n    ServiceUnavailable: 503,\n    VersionNotSupported: 505,\n    VersionConflict: 506\n};\n\n/**\n * @typedef VideoType\n * @description Enum of video types\n * @prop Normal `NORMAL` Default\n * @prop Debug `DEBUG` Currently unsupported.\n */\nexport const VideoType: {\n    Normal: JIBO.v1.Videos.Normal;\n    Debug: JIBO.v1.Videos.Debug;\n} = {\n    Normal: 'NORMAL',\n    Debug: 'DEBUG'\n};\n\n/**\n * @typedef ProtocolVersions\n * @description Two of everything! `JIBO.ProtocolVersions` lives in Phoenix repos.\n * @prop v1 {JIBO.ProtocolVersions.v1} `1.0`\n * @prop v2 {JIBO.ProtocolVersions.v2} `2.0`\n */\nexport const ProtocolVersions: {\n    v1: JIBO.ProtocolVersions.v1;\n    v2: JIBO.ProtocolVersions.v2;\n} = {\n    v1: '1.0',\n    v2: '2.0'\n};\n","export function isEvent(message:JIBO.v1.Acknowledgement|JIBO.v1.EventMessage): message is JIBO.v1.EventMessage {\n    return message.hasOwnProperty('EventBody');\n}\n\nexport function isAcknowledgement(message:JIBO.v1.Acknowledgement|JIBO.v1.EventMessage): message is JIBO.v1.Acknowledgement {\n    return message.hasOwnProperty('Response');\n}\n\nexport function isAngleTarget(target:JIBO.v1.LookAtTarget): target is JIBO.v1.AngleTarget {\n    return target.hasOwnProperty('Angle');\n}\n\nexport function isEntityTarget(target:JIBO.v1.LookAtTarget): target is JIBO.v1.EntityTarget {\n    return target.hasOwnProperty('Entity');\n}\n\nexport function isPositionTarget(target:JIBO.v1.LookAtTarget): target is JIBO.v1.PositionTarget {\n    return target.hasOwnProperty('Position');\n}\n\nexport function isCameraTarget(target:JIBO.v1.LookAtTarget): target is JIBO.v1.CameraTarget {\n    return target.hasOwnProperty('ScreenCoords');\n}","import RequestToken from '../../tokens/RequestToken';\nimport Requester from '../../Requester';\nimport RequestAPI from '../RequestAPI';\nimport {CommandTypes, UnloadAssetEvents} from '../../../jibo-command-protocol';\n\n/**\n * @class UnloadAssetToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class UnloadAssetToken extends RequestToken<JIBO.v1.UnloadAssetRequest, JIBO.v1.UnloadAssetEvent> {\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.UnloadAssetRequest) {\n        super(owner, protocol);\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle event\n        const message = event.EventBody;\n        switch (message.Event) {\n            case UnloadAssetEvents.UnloadAssetDone:\n                this.isComplete = true;\n                this._complete.resolve(message);\n                break;\n            case UnloadAssetEvents.UnloadAssetFailed:\n                this.isComplete = true;\n                this._complete.reject(message);\n                break;\n        }\n    }\n}\n\n/**\n * Controls Jibo's asset management.\n * @namespace Requester.unloadAssets\n */\nexport class UnloadAssets extends RequestAPI<JIBO.v1.UnloadAssetRequest, UnloadAssetToken> {\n\n    /**\n     * Generate Unload Asset Protocol\n     * @method Requester.unloadAssets#generateProtocol\n     * @param {string} name - Name given to the asset for later reference (must be unique).\n     * @returns {UnloadAssetRequest}\n     * @intdocs\n     */\n    static generateProtocol(name: string): JIBO.v1.UnloadAssetRequest {\n        return {\n            Type: CommandTypes.UnloadAsset,\n            Name: name\n        };\n    }\n\n    /**\n     * Command unload asset by name.\n     * @method Requester.unloadAssets#unloadAsset\n     * @param  {string}   name Name of asset to unload.\n     * @return {UnloadAssetToken}\n     */\n    public unloadAsset(name: string):UnloadAssetToken {\n        const protocol = UnloadAssets.generateProtocol(name);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.unloadAssets#generateUnloadToken\n     * @description Create UnloadAssetToken from UnloadAssetRequest protocol.\n     * @param {UnloadAssetRequest} protocol - UnloadAssetRequest protocol to generate a UnloadAssetToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated UnloadAssetToken should also be sent as a request.\n     * @return {UnloadAssetToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.UnloadAssetRequest, andSend=false): UnloadAssetToken {\n        const token = new UnloadAssetToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send UnloadAssetToken request.\n     * @method Requester.unloadAssets#sendToken\n     * @param {UnloadAssetToken} token - UnloadAssetToken to send.\n     * @intdocs\n     */\n    public sendToken(token: UnloadAssetToken): void {\n        this.owner.sendToken(token);\n    }\n}\n","import RequestToken from '../../tokens/RequestToken';\nimport Requester from '../../Requester';\nimport RequestAPI from '../RequestAPI';\nimport {CommandTypes, ResponseCode} from '../../../jibo-command-protocol';\n\n/**\n * @class SessionToken\n * @description Response token for the {@link Session} class.\n * @extends RequestToken\n * @hideconstructor\n */\nexport class SessionToken extends RequestToken<JIBO.v1.SessionRequest, JIBO.v1.SessionResponse> {\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.SessionRequest) {\n        super(owner, protocol);\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n        if (ack.Response.ResponseCode === ResponseCode.OK) {\n            this.isComplete = true;\n            this._complete.resolve(ack.Response as JIBO.v1.SessionResponse);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle event\n    }\n}\n\n/**\n * @namespace Requester.session\n */\nexport class Session extends RequestAPI<JIBO.v1.SessionRequest, SessionToken> {\n\n    /**\n     * Generate Session Protocol\n     * @method Requester.session#generateProtocol\n     * @returns {SessionRequest}\n     * @intdocs\n     */\n    static generateProtocol(): JIBO.v1.SessionRequest {\n        return {\n            Type: CommandTypes.StartSession\n        };\n    }\n\n    /**\n     * Start the session.\n     * @method Requester.session#startSession\n     * @return {SessionToken}\n     */\n    public startSession():SessionToken {\n        const protocol = Session.generateProtocol();\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.session#generateToken\n     * @description Create SessionToken from SessionRequest protocol.\n     * @param {SessionRequest} protocol - SessionRequest protocol to generate a SessionToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated SessionToken should also be sent as a request.\n     * @return {SessionToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.SessionRequest, andSend=false): SessionToken {\n        const token = new SessionToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send SessionToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.session#sendToken\n     * @param {SessionToken} token - SessionToken to send.\n     * @intdocs\n     */\n}","\nimport * as photo from './Photo';\nimport * as video from './Video';\n\n\n\nexport {\n    photo,\n    video\n};","//photo imports\nimport RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport {CommandTypes, PhotoEvents, ResponseCode} from '../../../../jibo-command-protocol';\n\n\n/**\n * Reponse token for {@link Photo#takePhoto}.\n * @class PhotoToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class PhotoToken extends RequestToken<JIBO.v1.TakePhotoRequest, JIBO.v1.TakePhotoEvent> {\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.TakePhotoRequest) {\n        super(owner, protocol);\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= ResponseCode.BadRequest) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle response\n        const message = event.EventBody;\n        if (message.Event === PhotoEvents.TakePhoto) {\n            this.isComplete = true;\n            this._complete.resolve(message);\n        }\n    }\n}\n\n/**\n * Controls Jibo's photo capture.\n * @namespace Requester.photo\n */\nexport class Photo extends RequestAPI<JIBO.v1.TakePhotoRequest, PhotoToken> {\n\n    /**\n     * Generate Photo Protocol\n     * @method Requester.photo#generateProtocol\n     * @param {Camera} [camera=left] - Which camera to use -- left or right.\n     * @param {CameraResolution} [resolution=LowRes] - Choose a resolution.\n     * @param {boolean} [removeDistortion=true] - Use `false` for fisheye lense.\n     * @returns {TakePhotoRequest}\n     * @intdocs\n     */\n    static generateProtocol(\n        camera:JIBO.v1.Cameras.CameraType = 'left',\n        resolution:JIBO.v1.CameraResolutions.CameraResolutionType = 'lowRes',\n        removeDistortion = true): JIBO.v1.TakePhotoRequest {\n        return {\n            Type: CommandTypes.TakePhoto,\n            Resolution: resolution,\n            Camera: camera,\n            Distortion: removeDistortion\n        };\n    }\n\n    /**\n     * Take a photo.\n     * @method Requester.photo#takePhoto\n     * @param  {CameraResolution} [resolution=LowRes] Choose a resolution.\n     * @param  {string}           [camera=left] Which camera to use -- left or right.\n     * @param  {boolean}          [removeDistortion=true] Use `false` for fisheye lense.\n     * @return {PhotoToken}\n     */\n    public takePhoto(\n        resolution:JIBO.v1.CameraResolutions.CameraResolutionType = 'lowRes',\n        camera:JIBO.v1.Cameras.CameraType = 'left',\n        removeDistortion:boolean = true):PhotoToken {\n        const protocol = Photo.generateProtocol(camera, resolution, removeDistortion);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.photo#generateToken\n     * @description Create PhotoToken from TakePhotoRequest protocol.\n     * @param {TakePhotoRequest} protocol - TakePhotoRequest protocol to generate a PhotoToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated PhotoToken should also be sent as a request.\n     * @return {PhotoToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.TakePhotoRequest, andSend=false): PhotoToken {\n        const token = new PhotoToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send PhotoToken request.\n     * <p><p>NOTE: Implementation in base class {@link RequestAPI}</p></p>\n     * @method Requester.photo#sendToken\n     * @param {PhotoToken} token - PhotoToken to send.\n     * @intdocs\n     */\n}","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport {Event} from '../../../events/Event';\nimport {CommandTypes, VideoEvents, ResponseCode} from '../../../../jibo-command-protocol';\n\n/**\n * Reponse token for {@link Video#getVideo}.\n * @class VideoToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class VideoToken extends RequestToken<JIBO.v1.VideoRequest, any> {\n\n    /**\n     * URL for video stream is ready.\n     * @name VideoToken#streamReady\n     * @type {Event<string>}\n     */\n    public streamReady:Event<string>;\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.VideoRequest) {\n        super(owner, protocol);\n        this.streamReady = new Event('Video ready for streaming');\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= ResponseCode.BadRequest) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle response\n        const eventData = event.EventBody;\n        if (eventData.Event === VideoEvents.VideoReady) {\n            this.streamReady.emit(eventData.URI);\n        }\n    }\n}\n\n\n/**\n * Controls Jibo's video capture.\n * @namespace Requester.video\n */\nexport class Video extends RequestAPI<JIBO.v1.VideoRequest, VideoToken> {\n\n    /**\n     * Generate Video Protocol\n     * @method Requester.video#generateProtocol\n     * @param {VideoType} [type=VideoType.Normal] - Choose a video type from the enum.\n     * @param {number} [duration=0] - How long to record for (in ms).\n     * @returns {VideoRequest}\n     * @intdocs\n     */\n    static generateProtocol(\n        type:JIBO.v1.Videos.VideoType = 'NORMAL', duration = 0): JIBO.v1.VideoRequest {\n        return {\n            Type: CommandTypes.Video,\n            Duration: duration,\n            VideoType: type\n        };\n    }\n\n    /**\n     * Take a video.\n     * @method Requester.video#getVideo\n     * @param  {VideoType} [type=Normal] Choose a video type from the enum.\n     * @param  {number}    [duration=0] How long to record for (in ms).\n     * @return {VideoToken}\n     */\n    public getVideo(type:JIBO.v1.Videos.VideoType = 'NORMAL', duration:number = 0): VideoToken {\n        const protocol = Video.generateProtocol(type, duration);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.video#generateToken\n     * @description Create VideoToken from VideoRequest protocol.\n     * @param {VideoRequest} protocol - VideoRequest protocol to generate a VideoToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated VideoToken should also be sent as a request.\n     * @return {VideoToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.VideoRequest, andSend=false): VideoToken {\n        const token = new VideoToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send VideoToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.video#sendToken\n     * @param {VideoToken} token - VideoToken to send.\n     * @intdocs\n     */\n}","import * as attention from './Attention';\nimport * as lookAt from './LookAt';\nimport * as display from './Display';\nimport * as play from './Play';\nimport * as video from './VideoPlayback';\n\nexport {\n    attention,\n    lookAt,\n    display,\n    play,\n    video\n};","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\n\n/**\n * Response token for the {@link Attention} class.\n * @class AttentionToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class AttentionToken extends RequestToken<JIBO.v1.AttentionRequest, void> {\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.AttentionRequest) {\n        super(owner, protocol);\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n        if (ack.Response.ResponseCode === 200) {\n            this.isComplete = true;\n            this._complete.resolve();\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle event\n    }\n}\n\n/**\n * Controls the Jibo's attention mode.\n * @namespace Requester.attention\n */\nexport class Attention extends RequestAPI<JIBO.v1.AttentionRequest, AttentionToken> {\n\n    /**\n     * Generate Attention Protocol\n     * @method Requester.attention#generateProtocol\n     * @param {AttentionMode} mode - Mode to set Jibo's attention to.\n     * @returns {AttentionRequest}\n     * @intdocs\n     */\n    static generateProtocol(mode: JIBO.v1.AttentionModes.AttentionModeType): JIBO.v1.AttentionRequest {\n        return {\n            Type: 'SetAttention',\n            Mode: mode\n        };\n    }\n\n    /**\n     * Set Jibo's attention to a specific mode.\n     * @method Requester.attention#setMode\n     * @param  {AttentionMode}  mode Mode to set Jibo's attention to.\n     * @return {AttentionToken}\n     */\n    public setMode(mode:JIBO.v1.AttentionModes.AttentionModeType):AttentionToken {\n        const protocol = Attention.generateProtocol(mode);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.attention#generateToken\n     * @description Create AttentionToken from AttentionRequest protocol.\n     * @param {AttentionRequest} protocol - AttentionRequest protocol to generate a AttentionToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated AttentionToken should also be sent as a request.\n     * @return {AttentionToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.AttentionRequest, andSend=false): AttentionToken {\n        const token = new AttentionToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send AttentionToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.attention#sendToken\n     * @param {AttentionToken} token - AttentionToken to send.\n     * @intdocs\n     */\n}","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport {AsyncCommandEvent, CommandTypes, LookAtEvents} from '../../../../jibo-command-protocol';\n\nexport interface LookAtAchievedResult {\n    AngleTarget: JIBO.v1.AngleVector;\n    PositionTarget: JIBO.v1.Vector3;\n}\n\nexport interface LookAtTrackLostResult {\n    EntityTarget: JIBO.v1.LookAtEntity;\n    AngleTarget: JIBO.v1.AngleVector;\n    PositionTarget: JIBO.v1.Vector3;\n}\n\n/**\n * Target options for LookAt\n * @typedef TargetMode\n * @prop Positoin\n * @prop Angle\n * @prop Entity\n * @prop Scren\n * @intdocs\n */\nexport enum TargetMode {\n    Position,\n    Angle,\n    Entity,\n    Screen\n}\n\n/**\n * Reponse token for {@link LookAt} APIs.\n * @class LookAtToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class LookAtToken extends RequestToken<JIBO.v1.LookAtRequest, LookAtAchievedResult|LookAtTrackLostResult> {\n\n    /** @private */\n    constructor(owner: Requester, protocol: JIBO.v1.LookAtRequest) {\n        super(owner, protocol);\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle event\n        const eventData = event.EventBody;\n        switch (eventData.Event) {\n            case AsyncCommandEvent.Stop:\n                this.isComplete = true;\n                this._complete.resolve();\n                break;\n            case AsyncCommandEvent.Error:\n                this.isComplete = true;\n                this._complete.reject(eventData);\n                break;\n            case LookAtEvents.LookAtAchieved:\n                this.isComplete = true;\n                this._complete.resolve(eventData);\n                break;\n            case LookAtEvents.TrackEntityLost:\n                this.isComplete = true;\n                this._complete.resolve(eventData);\n                break;\n        }\n    }\n}\n\n/**\n * Controls Jibo's LookAt movement.\n * @namespace Requester.lookAt\n */\nexport class LookAt extends RequestAPI<JIBO.v1.LookAtRequest, LookAtToken> {\n\n    /**\n     * Generate LookAt Protocol\n     * @method Requester.lookAt#generateProtocol\n     * @param {TargetMode} targetMode - How we are targetting our target (depends on the target type)\n     * @param {(Vector2|Vector3|LookAtEntity)} target - What we're looking at (Entity, Angle or Point in space)\n     * @param {boolean} levelHead - `true` to keep Jibo's head level while he moves.\n     * @param {boolean} [shouldTrack=false] - If we should track the target entity (Entity-Mode only)\n     * @returns {LookAtRequest}\n     * @intdocs\n     */\n    static generateProtocol(\n        targetMode: TargetMode,\n        target: JIBO.v1.Vector2 | JIBO.v1.Vector3 | JIBO.v1.LookAtEntity,\n        levelHead: boolean,\n        shouldTrack = false): JIBO.v1.LookAtRequest {\n        let lookAtTarget;\n        switch (targetMode) {\n            case TargetMode.Position:\n                lookAtTarget = { Position: target as JIBO.v1.Vector3 };\n                break;\n            case TargetMode.Angle:\n                lookAtTarget = { Angle: target as JIBO.v1.AngleVector };\n                break;\n            case TargetMode.Entity:\n                lookAtTarget = { Entity: target as JIBO.v1.LookAtEntity };\n                break;\n            case TargetMode.Screen:\n                lookAtTarget = { ScreenCoords: target as JIBO.v1.Vector2 };\n                break;\n        }\n        return {\n            Type: CommandTypes.LookAt,\n            LookAtTarget: lookAtTarget,\n            TrackFlag: shouldTrack,\n            LevelHeadFlag: levelHead\n        };\n    }\n\n    /**\n     * @method Requester.lookAt#position\n     * @description Look toward a 3D point in space.\n     * @param  {Vector3}     target 3D point to look at (`[x, y, z]`).\n     * @param  {boolean}     [levelHead=true] `true` to keep Jibo's head level while he moves.\n     * @return {LookAtToken}\n     */\n    public position(target:JIBO.v1.Vector3, levelHead:boolean = true):LookAtToken {\n        const protocol = LookAt.generateProtocol(TargetMode.Position, target, levelHead, false);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.lookAt#angle\n     * @description Look at an angle.\n     * @param  {AngleVector}    target Angle to look at (`[theta, psi]`).\n     * @param  {boolean}        [levelHead=true] `true` to keep Jibo's head level while he moves.\n     * @return {LookAtToken}\n     */\n    public angle(target:JIBO.v1.AngleVector, levelHead:boolean = true):LookAtToken {\n        const protocol = LookAt.generateProtocol(TargetMode.Angle, target, levelHead, false);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.lookAt#screenPosition\n     * @description Look at a point relative to Jibo's screen.\n     * @param  {Vector2}     target Point to look at (`[x, y, width, height]`).\n     * @param  {boolean}     [levelHead=true] `true` to keep Jibo's head level while he moves.\n     * @return {LookAtToken}\n     */\n    public screenPosition(target:JIBO.v1.Vector2, levelHead:boolean = true):LookAtToken {\n        const protocol = LookAt.generateProtocol(TargetMode.Screen, target, levelHead, false);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.lookAt#entity\n     * @description Look at an entity (usually a face).\n     * @param  {LookAtEntity}   target Entity to look at.\n     * @param  {boolean}        [levelHead=true] `true` to keep Jibo's head level while he moves.\n     * @return {LookAtToken}\n     */\n    public entity(target:JIBO.v1.LookAtEntity, shouldTrack:boolean, levelHead:boolean = true):LookAtToken {\n        const protocol = LookAt.generateProtocol(TargetMode.Entity, target, levelHead, shouldTrack);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.lookAt#generateToken\n     * @description Create LookAtToken from LookAtRequest protocol.\n     * @param {LookAtRequest} protocol - LookAtRequest protocol to generate a LookAtToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated LookAtToken should also be sent as a request.\n     * @return {LookAtToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.LookAtRequest, andSend=false): LookAtToken {\n        const token = new LookAtToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send LookAtToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.lookAt#sendToken\n     * @param {LookAtToken} token - LookAtToken to send.\n     * @intdocs\n     */\n}","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport {Event} from '../../../events/Event';\nimport {AsyncCommandEvent, ViewStates, DisplayEvents, CommandTypes, DisplayViewType} from '../../../../jibo-command-protocol';\n\n/**\n * Reponse token for {@link Display} APIs.\n * @class DisplayToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class DisplayToken extends RequestToken<JIBO.v1.DisplayRequest> {\n    /**\n     * Emitted when a display view is opened.\n     * @name DisplayToken#opened\n     * @type {Event}\n     */\n    public opened:Event<void>;\n\n\n    /** @private */\n    constructor(owner: Requester, protocol: JIBO.v1.DisplayRequest) {\n        super(owner, protocol);\n        this.opened = new Event('Opened');\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle event\n        const eventData = event.EventBody;\n        switch (eventData.Event) {\n            case AsyncCommandEvent.Stop:\n                this.isComplete = true;\n                this._complete.resolve();\n                break;\n            case AsyncCommandEvent.Error:\n                this.isComplete = true;\n                this._complete.reject(eventData);\n                break;\n            case DisplayEvents.ViewStateChange:\n                switch (eventData.State) {\n                    case ViewStates.Opened:\n                        this.opened.emit();\n                        break;\n                }\n        }\n    }\n}\n\n/**\n * Controls which views appear on Jibo's screen.\n * @namespace Requester.display\n */\nexport class Display extends RequestAPI<JIBO.v1.DisplayRequest, DisplayToken> {\n\n    /**\n     * Generate Display Protocol\n     * @method Requester.display#generateProtocol\n     * @param {(EyeView | TextView | ImageView)} view - View to replace the existing one with.\n     * @returns {DisplayRequest}\n     * @intdocs\n     */\n    static generateProtocol(view: JIBO.v1.EyeView | JIBO.v1.TextView | JIBO.v1.ImageView): JIBO.v1.DisplayRequest {\n        return {\n            Type: CommandTypes.Display,\n            View: view\n        };\n    }\n\n    // HACK for forward compatibility with new, published tookit module:\n    // \"@jibo/apptoolkit-library\": \"^0.1.5\"\n    public swap(view:JIBO.v1.EyeView | JIBO.v1.TextView | JIBO.v1.ImageView):DisplayToken {\n        return this.swapView(view);\n    }\n\n    /**\n     * @method Requester.display#swapView\n     * @description Replace the existing view with the one given.\n     * @param  {EyeView | TextView | ImageView}  view View to replace the existing one with.\n     * @return {DisplayToken}\n     */\n    public swapView(view:JIBO.v1.EyeView | JIBO.v1.TextView | JIBO.v1.ImageView):DisplayToken {\n        const protocol = Display.generateProtocol(view);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.display#createEyeView\n     * @description Create a view to display Jibo's eye on screen.\n     * @param  {string} name Unique name of view.\n     * @return {EyeView}\n     */\n    public createEyeView(name:string):JIBO.v1.EyeView {\n        let view:JIBO.v1.EyeView = {\n            Type: DisplayViewType.Eye,\n            Name: name\n        };\n        return view;\n    }\n\n    /**\n     * @method Requester.display#createTextView\n     * @description Create a view to display text on Jibo's screen.\n     * @param  {string} name Unique name of view.\n     * @param  {string} text Text to display on screen.\n     * @return {TextView}\n     */\n    public createTextView(name:string, text:string):JIBO.v1.TextView {\n        let view:JIBO.v1.TextView = {\n            Type: DisplayViewType.Text,\n            Name: name,\n            Text: text\n        };\n        return view;\n    }\n\n    /**\n     * @method Requester.display#createImageView\n     * @description Create a view to display an image on Jibo's screen.\n     * @param  {string} name Unique name of view.\n     * @param  {ImageData} data Data for retrieving image.\n     * @return {ImageView}\n     */\n    public createImageView(name:string, data:JIBO.v1.ImageData):JIBO.v1.ImageView {\n        let view:JIBO.v1.ImageView = {\n            Type: DisplayViewType.Image,\n            Name: name,\n            Image: data\n        };\n        return view;\n    }\n\n    /**\n     * @method Requester.display#generateToken\n     * @description Create DisplayToken from DisplayRequest protocol.\n     * @param {DisplayRequest} protocol - DisplayRequest protocol to generate a DisplayToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated DisplayToken should also be sent as a request.\n     * @return {DisplayToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.DisplayRequest, andSend=false): DisplayToken {\n        const token = new DisplayToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send DisplayToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.display#sendToken\n     * @param {DisplayToken} token - DisplayToken to send.\n     * @intdocs\n     */\n}\n","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport {AsyncCommandEvent, CommandTypes} from '../../../../jibo-command-protocol';\n\n/**\n * @class SayToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class SayToken extends RequestToken<JIBO.v1.SayRequest> {\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.SayRequest) {\n        super(owner, protocol);\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle event\n        switch (event.EventBody.Event) {\n            case AsyncCommandEvent.Stop:\n                this.isComplete = true;\n                this._complete.resolve();\n                break;\n            case AsyncCommandEvent.Error:\n                this.isComplete = true;\n                this._complete.reject(event.EventBody);\n                break;\n        }\n    }\n}\n\n\n/**\n * Controls Jibo's speech and audio.\n * @namespace Requester.play\n */\nexport class Play extends RequestAPI<JIBO.v1.SayRequest, SayToken> {\n\n    /**\n     * Generate Play Protocol\n     * @method Requester.play#generateProtocol\n     * @param {string} esml_uri - ESML to speak or URI of sound to play\n     * @param {JIBO.v1.SpeakOptions} [speakOptions] Options to configure , can be used in conjunction with ESML strings.\n     * @param {JIBO.v1.AutoRuleConfig} [autoRuleConfig] Configuration for AutoRules , can be used in conjunction with ESML strings.\n     * @returns {SayRequest}\n     * @intdocs\n     */\n    static generateProtocol(esmlUri: string, speakOptions?:JIBO.v1.SpeakOptions, autoRuleConfig?:JIBO.v1.AutoRuleConfig ): JIBO.v1.SayRequest {\n        return {\n            Type: CommandTypes.Say,\n            ESML: esmlUri,\n            SpeakOptions: speakOptions,\n            AutoRuleConfig: autoRuleConfig\n        };\n    }\n\n    /**\n     * Make Jibo speak.\n     * @method Requester.play#say\n     * @param  {string}   esml Embodied Speech Markup Language to say. See the [ESML Documentation]{@tutorial esml}.\n     * @param {JIBO.v1.SpeakOptions} [speakOptions] Options to configure , can be used in conjunction with ESML strings.\n     * @param {JIBO.v1.AutoRuleConfig} [autoRuleConfig] Configuration for AutoRules , can be used in conjunction with ESML strings.\n     * @return {SayToken}\n     */\n    public say(esml:string, speakOptions?:JIBO.v1.SpeakOptions, autoRuleConfig?:JIBO.v1.AutoRuleConfig):SayToken {\n        const protocol = Play.generateProtocol(esml, speakOptions, autoRuleConfig);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * Make Jibo play a sound.\n     * @method Requester.play#sound\n     * @param  {string}   uri URI to the sound to play.\n     * @return {SayToken}\n     */\n    public sound(uri:string):SayToken {\n        //TODO: Wrap uri in correct ESML tags to make it play as a sound effect\n        const protocol = Play.generateProtocol(uri);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.play#generateToken\n     * @description Create SayToken from SayRequest protocol.\n     * @param {SayRequest} protocol - SayRequest protocol to generate a SayToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated SayToken should also be sent as a request.\n     * @return {SayToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.SayRequest, andSend=false): SayToken {\n        const token = new SayToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send SayToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.play#sendToken\n     * @param {SayToken} token - SayToken to send.\n     * @intdocs\n     */\n    public sendToken(token: SayToken): void {\n        this.owner.sendToken(token);\n    }\n}\n","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport { CommandTypes } from '../../../../jibo-command-protocol';\n\n/**\n * Response token for the {@link VideoPlayback} class.\n * @class AttentionToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class VideoPlaybackToken extends RequestToken<JIBO.v1.VideoPlaybackRequest, void> {\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.VideoPlaybackRequest) {\n        super(owner, protocol);\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n        if (ack.Response.ResponseCode === 200) {\n            this.isComplete = true;\n            this._complete.resolve();\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle event\n    }\n}\n\n/**\n * Controls the Jibo's attention mode.\n * @namespace Requester.attention\n */\nexport class VideoPlayback extends RequestAPI<JIBO.v1.VideoPlaybackRequest, VideoPlaybackToken> {\n\n    /**\n     * Generate Attention Protocol\n     * @method Requester.attention#generateProtocol\n     * @param {AttentionMode} mode - Mode to set Jibo's attention to.\n     * @returns {AttentionRequest}\n     * @intdocs\n     */\n    static generateProtocol(url: string): JIBO.v1.VideoPlaybackRequest {\n        return {\n            Type: CommandTypes.VideoPlayback,\n            URI: url,\n            Name: 'somename'\n        };\n    }\n\n    /**\n     * Set Jibo's attention to a specific mode.\n     * @method Requester.attention#setMode\n     * @param  {AttentionMode}  mode Mode to set Jibo's attention to.\n     * @return {AttentionToken}\n     */\n    public play(url: string):VideoPlaybackToken {\n        const protocol = VideoPlayback.generateProtocol(url);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.attention#generateToken\n     * @description Create AttentionToken from AttentionRequest protocol.\n     * @param {AttentionRequest} protocol - AttentionRequest protocol to generate a AttentionToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated AttentionToken should also be sent as a request.\n     * @return {AttentionToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.VideoPlaybackRequest, andSend=false): VideoPlaybackToken {\n        const token = new VideoPlaybackToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send AttentionToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.attention#sendToken\n     * @param {AttentionToken} token - AttentionToken to send.\n     * @intdocs\n     */\n}","import * as hotWord from './HotWord';\nimport * as listen from './Listen';\n\nexport {\n    hotWord,\n    listen\n};","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport {Event} from '../../../events/Event';\nimport {HotWordEvents, CommandTypes, StreamTypes} from '../../../../jibo-command-protocol';\n\n\n/**\n * @class HotWordToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class HotWordToken extends RequestToken<JIBO.v1.HotWordRequest> {\n    /**\n     * Heard \"Hey Jibo\"\n     * @name HotWordToken#hotWordHeard\n     * @type {Event}\n     */\n    public hotWordHeard:Event<JIBO.v1.HotWordHeardEvent>;\n    /**\n     * Result of what Jibo head is available.\n     * @name HotWordToken#listenResult\n     * @type {Event<string>}\n     */\n    public listenResult:Event<string>;\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.HotWordRequest) {\n        super(owner, protocol);\n        this.hotWordHeard = new Event('Heard hot word');\n        this.listenResult = new Event('Listen complete');\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle response\n        const message = event.EventBody;\n        switch (message.Event) {\n            case HotWordEvents.HotWordHeard:\n                this.hotWordHeard.emit(message);\n                break;\n        }\n    }\n}\n\n/**\n * Controls Jibo's HotWord Listening.\n * CURRENTLY UNSUPPORTED\n * @namespace Requester.hotWord\n */\nexport class HotWord extends RequestAPI<JIBO.v1.HotWordRequest, HotWordToken> {\n\n    /**\n     * Generate HotWord Protocol\n     * @method Requester.hotWord#generateProtocol\n     * @param {boolean} [listen=false] - Whether to listen for additional speech input after \"Hey Jibo\" is heard.\n     * @returns {HotWordRequest}\n     * @intdocs\n     */\n    static generateProtocol(listen = false): JIBO.v1.HotWordRequest {\n        return {\n            Type: CommandTypes.Subscribe,\n            StreamType: StreamTypes.HotWord,\n            StreamFilter: {},\n            Listen: listen\n        };\n    }\n\n    /**\n     * Listen for \"Hey Jibo\".\n     * @method Requester.hotWord#listen\n     * @param {boolean} [listen = false] Whether to listen for additional speech input after \"Hey Jibo\" is heard.\n     * @return {HotWordToken}\n     */\n    public listen(listen:boolean = false):HotWordToken {\n        const protocol = HotWord.generateProtocol(listen);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.hotWord#generateToken\n     * @description Create HotWordToken from HotWordRequest protocol.\n     * @param {HotWordRequest} protocol - HotWordRequest protocol to generate a HotWordToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated HotWordToken should also be sent as a request.\n     * @return {HotWordToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.HotWordRequest, andSend=false): HotWordToken {\n        const token = new HotWordToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send HotWordToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.hotWord#sendToken\n     * @param {HotWordToken} token - HotWordToken to send.\n     * @intdocs\n     */\n    public sendToken(token: HotWordToken): void {\n        this.owner.sendToken(token);\n    }\n}","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport {Event} from '../../../events/Event';\nimport RequestAPI from '../../RequestAPI';\nimport {CommandTypes, ListenEvents, AsyncCommandEvent} from '../../../../jibo-command-protocol';\n\n/**\n * Request token for the {@link Listen} class.\n * @class ListenToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class ListenToken extends RequestToken<JIBO.v1.ListenRequest, JIBO.v1.ListenResultEvent | JIBO.v1.ListenStopEvent> {\n    /**\n     * Listen token was updated. See [RCP Docs](https://github.jibo.com/phoenix/jibo-command-protocol) for docs.\n     * @name ListenToken#update\n     * @type {Event<JIBO.v1.ListenResultEvent>}\n     */\n    public update:Event<JIBO.v1.ListenResultEvent>;\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.ListenRequest) {\n        super(owner, protocol);\n        this.update = new Event('Update of listen status');\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n     public handleEvent(event:JIBO.v1.EventMessage) {\n         //handle event\n         const eventData = event.EventBody;\n         switch (eventData.Event) {\n             case AsyncCommandEvent.Stop:\n                 this.isComplete = true;\n                 this._complete.reject(<JIBO.v1.ListenStopEvent>eventData);\n                 break;\n             case ListenEvents.ListenResult:\n                 this.isComplete = true;\n                 this._complete.resolve(<JIBO.v1.ListenResultEvent>eventData);\n                 this.update.emit(<JIBO.v1.ListenResultEvent> eventData);\n                 break;\n             case AsyncCommandEvent.Error:\n                 this.isComplete = true;\n                 this._complete.reject(eventData);\n                 break;\n         }\n     }\n\n}\n\n/**\n * Controls Jibo's Listening.\n * @namespace Requester.listen\n */\nexport class Listen extends RequestAPI<JIBO.v1.ListenRequest, ListenToken> {\n\n    /**\n     * Generate Listen Protocol\n     * @method Requester.listen#generateProtocol\n     * @param {number} [maxSpeechTimeout=15] - Max speech timeout (in seconds)\n     * @param {number} [maxNoSpeechTimeout=15] - Max no speech timeout (in seconds)\n     * @param {string} [languageCode='en-US'] - Language code\n     * @returns {ListenRequest}\n     * @intdocs\n     */\n    static generateProtocol(maxSpeechTimeout = 15, maxNoSpeechTimeout = 15, languageCode = 'en-US'): JIBO.v1.ListenRequest {\n        return {\n            Type: CommandTypes.Listen,\n            MaxSpeechTimeout: maxSpeechTimeout,\n            MaxNoSpeechTimeout: maxNoSpeechTimeout,\n            LanguageCode: languageCode\n        };\n    }\n\n    // HACK for forward compatibility with new, published tookit module:\n    // \"@jibo/apptoolkit-library\": \"^0.1.5\"\n\n    public subscribe: { hotword: any } = { hotword: undefined }; // placeholder for HotWord.listen();\n\n    public start(maxSpeechTimeout:number = 15, maxNoSpeechTimeout:number = 15, languageCode:string = 'en-US'):ListenToken {\n        return this.listen(maxSpeechTimeout, maxNoSpeechTimeout, languageCode);\n    }\n\n    /**\n     * Request for the robot to listen.\n     * @method Requester.listen#listen\n     * @param  {number}   [maxSpeechTimeout = 15] In seconds\n     * @param  {number}   [maxNoSpeechTimeout = 15] In seconds\n     * @param  {number}   [languageCode = en_US]\n     * @return {ListenToken}\n     */\n    public listen(maxSpeechTimeout:number = 15, maxNoSpeechTimeout:number = 15, languageCode:string = 'en-US'):ListenToken {\n        const protocol = Listen.generateProtocol(maxSpeechTimeout, maxNoSpeechTimeout, languageCode);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.listen#generateToken\n     * @description Create ListenToken from ListenRequest protocol.\n     * @param {ListenRequest} protocol - ListenRequest protocol to generate a ListenToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated ListenToken should also be sent as a request.\n     * @return {ListenToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.ListenRequest, andSend=false): ListenToken {\n        const token = new ListenToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send ListenToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.listen#sendToken\n     * @param {ListenToken} token - ListenToken to send.\n     * @intdocs\n     */\n    public sendToken(token: ListenToken): void {\n        this.owner.sendToken(token);\n    }\n}\n","import * as face from './FaceTrack';\nimport * as motion from './MotionTrack';\n\nexport {\n    face,\n    motion\n};","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport {Event} from '../../../events/Event';\nimport {CommandTypes, EntityTrackEvents, StreamTypes} from '../../../../jibo-command-protocol';\n\n/**\n * Request token for the {@link FaceTrack} class.\n * @class FaceTrackToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class FaceTrackToken extends RequestToken<JIBO.v1.EntityRequest, any> {\n    /**\n     * Update on location of face being tracked.\n     * @name FaceTrackToken#update\n     * @type {Event<TrackedEntity[]>}\n     */\n    public update:Event<JIBO.v1.TrackedEntity[]>;\n    /**\n     * New face being tracked.\n     * @name FaceTrackToken#gained\n     * @type {Event<TrackedEntity[]>}\n     */\n    public gained:Event<JIBO.v1.TrackedEntity[]>;\n    /**\n     * Currently tracked face was lost.\n     * @name FaceTrackToken#lost\n     * @type {Event<TrackedEntity[]>}\n     */\n    public lost:Event<JIBO.v1.TrackedEntity[]>;\n\n    constructor(owner:Requester, protocol: JIBO.v1.EntityRequest) {\n        super(owner, protocol);\n        this.update = new Event('Update of tracked entities');\n        this.gained = new Event('Entity found');\n        this.lost = new Event('Entity lost');\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle response\n        const message = event.EventBody;\n        switch (message.Event) {\n            case EntityTrackEvents.TrackGained:\n                this.gained.emit(message.Tracks);\n                break;\n            case EntityTrackEvents.TrackUpdate:\n                this.update.emit(message.Tracks);\n                break;\n            case EntityTrackEvents.TrackLost:\n                this.lost.emit(message.Tracks);\n                break;\n        }\n    }\n}\n\n\n/**\n * Controls Jibo's face tracking.\n * @namespace Requester.faceTrack\n */\nexport class FaceTrack extends RequestAPI<JIBO.v1.EntityRequest, FaceTrackToken> {\n\n    /**\n     * Generate Face Track Protocol\n     * @method Requester.faceTrack#generateProtocol\n     * @returns {EntityRequest}\n     * @intdocs\n     */\n    static generateProtocol(): JIBO.v1.EntityRequest {\n        return {\n            Type: CommandTypes.Subscribe,\n            StreamType: StreamTypes.Entity,\n            StreamFilter: {}\n        };\n    }\n\n    /**\n     * @method Requester.faceTrack#trackFaces\n     * @description Track all faces in Jibo's field of vision.\n     * @return {FaceTrackToken}\n     */\n    public trackFaces(): FaceTrackToken {\n        const protocol = FaceTrack.generateProtocol();\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.faceTrack#generateToken\n     * @description Create FaceTrackToken from EntityRequest protocol.\n     * @param {EntityRequest} protocol - EntityRequest protocol to generate a FaceTrackToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated FaceTrackToken should also be sent as a request.\n     * @return {FaceTrackToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.EntityRequest, andSend=false): FaceTrackToken {\n        const token = new FaceTrackToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send FaceTrackToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.faceTrack#sendToken\n     * @param {FaceTrackToken} token - FaceTrackToken to send.\n     * @intdocs\n     */\n    public sendToken(token: FaceTrackToken): void {\n        this.owner.sendToken(token);\n    }\n}","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport {Event} from '../../../events/Event';\nimport {CommandTypes, StreamTypes, MotionEvents} from '../../../../jibo-command-protocol';\n\n/**\n * Request token for the {@link MotionTrack} class.\n * @class MotionToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class MotionToken extends RequestToken<JIBO.v1.MotionRequest, any> {\n    /**\n     * @name MotionToken#update\n     * @type {Event<MotionEntity[]>}\n     */\n    public update:Event<JIBO.v1.MotionEntity[]>;\n\n    constructor(owner:Requester, protocol: JIBO.v1.MotionRequest) {\n        super(owner, protocol);\n        this.update = new Event('Update of motion entities');\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        const message = event.EventBody;\n        switch (message.Event) {\n            case MotionEvents.MotionDetected:\n                this.update.emit(message.Motions);\n                break;\n        }\n    }\n}\n\n\n\n/**\n * Controls Jibo's mostion tracking.\n * @namespace Requester.motionTrack\n */\nexport class MotionTrack extends RequestAPI<JIBO.v1.MotionRequest, MotionToken> {\n\n    /**\n     * Generate Motion Track Protocol\n     * @method Requester.motionTrack#generateProtocol\n     * @returns {MotionRequest}\n     * @intdocs\n     */\n    static generateProtocol(): JIBO.v1.MotionRequest {\n        return {\n            Type: CommandTypes.Subscribe,\n            StreamType: StreamTypes.Motion,\n            StreamFilter: {}\n        };\n    }\n\n    /**\n     * @method Requester.motionTrack#trackMotions\n     * @description Track all motions in Jibo's field of vision.\n     * @return {MotionToken}\n     */\n    public trackMotions():MotionToken {\n        const protocol = MotionTrack.generateProtocol();\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.motionTrack#generateToken\n     * @description Create MotionToken from MotionRequest protocol.\n     * @param {MotionRequest} protocol - MotionRequest protocol to generate a MotionToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated MotionToken should also be sent as a request.\n     * @return {MotionToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.MotionRequest, andSend=false): MotionToken {\n        const token = new MotionToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send MotionToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.motionTrack#sendToken\n     * @param {MotionToken} token - MotionToken to send.\n     * @intdocs\n     */\n    public sendToken(token: MotionToken): void {\n        this.owner.sendToken(token);\n    }\n}","import * as headTouch from './HeadTouch';\nimport * as screenGesture from './ScreenGesture';\n\nexport {\n    headTouch,\n    screenGesture\n};","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport {Event} from '../../../events/Event';\nimport {CommandTypes, StreamTypes, HeadTouchEvents, AsyncCommandEvent} from '../../../../jibo-command-protocol';\n\n/**\n * @class HeadTouchToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class HeadTouchToken extends RequestToken<JIBO.v1.HeadTouchRequest> {\n\n    /**\n     * One or more of Jibo's touchpad sensors was touched.\n     * @name HeadTouchToken#HeadTouchEvent\n     * @type {Event}\n     */\n    public update:Event<boolean[]>;\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.HeadTouchRequest) {\n        super(owner, protocol);\n        this.update = new Event('Update of head touch status');\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle event\n        const message = event.EventBody;\n        switch (message.Event) {\n            case AsyncCommandEvent.Stop:\n                this.isComplete = true;\n                this._complete.resolve();\n                break;\n            case AsyncCommandEvent.Error:\n                this.isComplete = true;\n                this._complete.reject();\n                break;\n            case HeadTouchEvents.HeadTouched:\n                this.update.emit(message.Pads);\n                break;\n        }\n    }\n}\n\n/**\n * Controls subscription to Head Touch events\n * @namespace Requester.headTouch\n */\nexport class HeadTouch extends RequestAPI<JIBO.v1.HeadTouchRequest, HeadTouchToken> {\n\n    /**\n     * Generate Head Touch Protocol\n     * @method Requester.headTouch#generateProtocol\n     * @returns {HeadTouchRequest}\n     * @intdocs\n     */\n    static generateProtocol(): JIBO.v1.HeadTouchRequest {\n        return {\n            Type: CommandTypes.Subscribe,\n            StreamType: StreamTypes.HeadTouch,\n            StreamFilter: {},\n        };\n    }\n\n    /**\n     * Listen for head touch.\n     * @method Requester.headTouch#listen\n     * @return {HeadTouchToken}\n     */\n    public listen():HeadTouchToken {\n        const protocol = HeadTouch.generateProtocol();\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.headTouch#generateToken\n     * @description Create HeadTouchToken from HeadTouchRequest protocol.\n     * @param {HeadTouchRequest} protocol - HeadTouchRequest protocol to generate a HeadTouchToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated HeadTouchToken should also be sent as a request.\n     * @return {HeadTouchToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.HeadTouchRequest, andSend=false): HeadTouchToken {\n        const token = new HeadTouchToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send HeadTouchToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.headTouch#sendToken\n     * @param {HeadTouchToken} token - HeadTouchToken to send.\n     * @intdocs\n     */\n    public sendToken(token: HeadTouchToken): void {\n        this.owner.sendToken(token);\n    }\n}","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport {Event} from '../../../events/Event';\nimport {CommandTypes, StreamTypes, ScreenGestureEvents, AsyncCommandEvent} from '../../../../jibo-command-protocol';\n\n/**\n * Reponse token for {@link ScreenGesture} APIs.\n * @class ScreenGestureToken\n * @extends RequestToken\n * @hideconstructor\n */\nexport class ScreenGestureToken extends RequestToken<JIBO.v1.ScreenGestureRequest> {\n    /**\n     * Tap screen gesture. `[x,y]` of tap location type.\n     * @name ScreenGestureToken#tap\n     * @type {Event<Vector2>}\n     */\n    public tap:Event<JIBO.v1.Vector2>;\n\n    /**\n     * Swipe screen gesture. Type is direction of swipe.\n     * @name ScreenGestureToken#swipe\n     * @type {Event<SwipeDirection>}\n     */\n    public swipe:Event<JIBO.v1.SwipeDirections.SwipeDirectionType>;\n\n\n    /** @private */\n    constructor(owner: Requester, protocol: JIBO.v1.ScreenGestureRequest) {\n        super(owner, protocol);\n        this.tap = new Event(ScreenGestureEvents.Tap);\n        this.swipe = new Event(ScreenGestureEvents.Swipe);\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle event\n        const eventData = event.EventBody;\n        switch (eventData.Event) {\n            case AsyncCommandEvent.Stop:\n                this.isComplete = true;\n                this._complete.resolve();\n                break;\n            case AsyncCommandEvent.Error:\n                this.isComplete = true;\n                this._complete.reject(eventData);\n                break;\n            case ScreenGestureEvents.Tap:\n                 this.tap.emit(eventData.Coordinate);\n                 break;\n            case ScreenGestureEvents.Swipe:\n                 this.swipe.emit(eventData.Direction);\n                 break;\n\n        }\n    }\n}\n\n/**\n * Allows subsription to the events emited when a gesture is detected in the Jibo screen.\n * @namespace Requester.screenGesture\n */\nexport class ScreenGesture extends RequestAPI<JIBO.v1.ScreenGestureRequest, ScreenGestureToken> {\n\n    /**\n     * Generate Screen Gesture Protocol\n     * @method Requester.screenGesture#generateProtocol\n     * @param {ScreenGestureFilter} [filter={}]\n     * @returns {ScreenGestureRequest}\n     * @intdocs\n     */\n    static generateProtocol(filter: JIBO.v1.ScreenGestureFilter = {}): JIBO.v1.ScreenGestureRequest {\n        return {\n            Type: CommandTypes.Subscribe,\n            StreamType: StreamTypes.ScreenGesture,\n            StreamFilter: filter\n        };\n    }\n\n    /**\n     * @method Requester.screenGesture#subscribe\n     * @description Listen for screen touch input.\n     * @param  {ScreenGestureFilter}  filter Data for screen touch info, including type of gesture to listen\n     * for and area to listen in.\n     * @return {ScreenGestureToken}\n     */\n    public subscribe(filter:JIBO.v1.ScreenGestureFilter = {}): ScreenGestureToken {\n        const protocol = ScreenGesture.generateProtocol(filter);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.screenGesture#generateToken\n     * @description Create ScreenGestureToken from ScreenGestureRequest protocol.\n     * @param {ScreenGestureRequest} protocol - ScreenGestureRequest protocol to generate a ScreenGestureToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated ScreenGestureToken should also be sent as a request.\n     * @return {ScreenGestureToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.ScreenGestureRequest, andSend=false): ScreenGestureToken {\n        const token = new ScreenGestureToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send ScreenGestureToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.screenGesture#sendToken\n     * @param {ScreenGestureToken} token - ScreenGestureToken to send.\n     * @intdocs\n     */\n    public sendToken(token: ScreenGestureToken): void {\n        this.owner.sendToken(token);\n    }\n}","import * as getConfig from './GetConfig';\nimport * as setConfig from './SetConfig';\n\nexport {\n    getConfig,\n    setConfig\n};","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport {CommandTypes, ConfigEvents} from '../../../../jibo-command-protocol';\n\n\n/**\n * @class GetConfigToken\n * @description Response token for the {@link GetConfig#get} class.\n * @extends RequestToken\n * @hideconstructor\n */\nexport class GetConfigToken extends RequestToken<JIBO.v1.GetConfigRequest, JIBO.v1.ConfigEvent> {\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.GetConfigRequest) {\n        super(owner, protocol);\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle event\n        let message = event.EventBody;\n        switch (message.Event) {\n            case ConfigEvents.onConfig:\n                this.isComplete = true;\n                this._complete.resolve(message);\n                break;\n        }\n    }\n}\n\n/**\n * Controls getting robot configuration options\n * @namespace Requester.getConfig\n */\nexport class GetConfig extends RequestAPI<JIBO.v1.GetConfigRequest, GetConfigToken> {\n\n    /**\n     * Generate Get Config Protocol\n     * @method Requester.getConfig#generateProtocol\n     * @returns {GetConfigRequest}\n     * @intdocs\n     */\n    static generateProtocol(): JIBO.v1.GetConfigRequest {\n        return {\n            Type: CommandTypes.GetConfig\n        };\n    }\n\n    /**\n     * Get robot configuration options.\n     * @method Requester.getConfig#get\n     * @return {GetConfigToken}\n     */\n    public get():GetConfigToken {\n        const protocol = GetConfig.generateProtocol();\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.getConfig#generateToken\n     * @description Create GetConfigToken from GetConfigRequest protocol.\n     * @param {GetConfigRequest} protocol - GetConfigRequest protocol to generate a GetConfigToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated GetConfigToken should also be sent as a request.\n     * @return {GetConfigToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.GetConfigRequest, andSend=false): GetConfigToken {\n        const token = new GetConfigToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send GetConfigToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.getConfig#sendToken\n     * @param {GetConfigToken} token - GetConfigToken to send.\n     * @intdocs\n     */\n    public sendToken(token: GetConfigToken): void {\n        this.owner.sendToken(token);\n    }\n}","import RequestToken from '../../../tokens/RequestToken';\nimport Requester from '../../../Requester';\nimport RequestAPI from '../../RequestAPI';\nimport {CommandTypes, AsyncCommandEvent} from '../../../../jibo-command-protocol';\n\n/**\n * @class SetConfigToken\n * @description Response token for the {@link SetConfig#set} class.\n * @extends RequestToken\n * @hideconstructor\n */\nexport class SetConfigToken extends RequestToken<JIBO.v1.SetConfigRequest> {\n\n    /** @private */\n    constructor(owner:Requester, protocol: JIBO.v1.SetConfigRequest) {\n        super(owner, protocol);\n    }\n\n    /**\n     * @private\n     */\n    public handleAck(ack:JIBO.v1.Acknowledgement) {\n        //handle ack\n        if (ack.Response.ResponseCode >= 400) {\n            this.isComplete = true;\n            this._complete.reject(ack.Response);\n            return;\n        }\n    }\n\n    /**\n     * @private\n     */\n    public handleEvent(event:JIBO.v1.EventMessage) {\n        //handle event\n        switch (event.EventBody.Event) {\n            case AsyncCommandEvent.Stop:\n                this.isComplete = true;\n                this._complete.resolve();\n                break;\n            case AsyncCommandEvent.Error:\n                this.isComplete = true;\n                this._complete.reject(event.EventBody);\n                break;\n        }\n    }\n}\n\n/**\n * Controls setting robot configuration options\n * @namespace Requester.setConfig\n */\nexport class SetConfig extends RequestAPI<JIBO.v1.SetConfigRequest, SetConfigToken> {\n\n    /**\n     * Generate Set Config Protocol\n     * @method Requester.setConfig#generateProtocol\n     * @param {SetConfigOptions} options\n     * @returns {SetConfigRequest}\n     * @intdocs\n     */\n    static generateProtocol(options: JIBO.v1.SetConfigOptions): JIBO.v1.SetConfigRequest {\n        return {\n            Type: CommandTypes.SetConfig,\n            Options: options\n        };\n    }\n\n    /**\n     * Set robot configuration options.\n     * @method Requester.setConfig#set\n     * @param  {number}  mixer Volume between 0 (mute) and 1 (loudest).\n     * @return {SetConfigToken}\n     */\n    public set(options: JIBO.v1.SetConfigOptions):SetConfigToken {\n        const protocol = SetConfig.generateProtocol(options);\n        return this.generateToken(protocol, true);\n    }\n\n    /**\n     * @method Requester.setConfig#generateToken\n     * @description Create SetConfigToken from SetConfigRequest protocol.\n     * @param {SetConfigRequest} protocol - SetConfigRequest protocol to generate a SetConfigToken from.\n     * @param {boolean} [andSend=false] - `True` if the generated SetConfigToken should also be sent as a request.\n     * @return {SetConfigToken}\n     * @intdocs\n     */\n    public generateToken(protocol: JIBO.v1.SetConfigRequest, andSend=false): SetConfigToken {\n        const token = new SetConfigToken(this.owner, protocol);\n        if (andSend) {\n            super.sendToken(token);\n        }\n        return token;\n    }\n\n    /**\n     * Send SetConfigToken request.\n     * <p>NOTE: Implementation in base class {@link RequestAPI}</p>\n     * @method Requester.setConfig#sendToken\n     * @param {SetConfigToken} token - SetConfigToken to send.\n     * @intdocs\n     */\n    public sendToken(token: SetConfigToken): void {\n        this.owner.sendToken(token);\n    }\n}","import * as structural from './structural';\nimport * as emotion from './emotion';\nimport * as perception from './perception';\nimport * as play from './Play';\nimport * as listen from './Listen';\nimport * as display from './Display';\nimport * as slim from './SLIM';\n\n/**\n * @description Namespace for the v2 RCP protocol.\n * </br> See [Phoenix RCP](https://github.jibo.com/phoenix/jibo-command-protocol) for all `JIBO` docs.\n * @namespace Requester.v2\n * @intdocs\n */\n\nexport {\n    play,\n    listen,\n    display,\n    slim,\n    perception,\n    emotion,\n    structural\n};\n","/**\n * @namespace Requester.v2.structural\n * @intdocs\n */\n\nexport * from './Parallel';\nexport * from './Sequence';","import { generateTransactionID } from '../../../UUID';\n\n\n/**\n * @class Requester.v2.structural.Parallel\n * @intdocs\n */\nexport class Parallel {\n\n    /**\n     * Generates Parallel Protocol. See [Phoenix RCP](https://github.jibo.com/phoenix/jibo-command-protocol) for `JIBO` docs.\n     * @method Requester.v2.structural.Parallel#generateProtocol\n     * @param {JIBO.v2.behaviors.Behavior[]} behaviors - Behaviors to execute in parallel\n     * @param {JIBO.v2.behaviors.Behavior[]} [succeedOnFirst=false] - `true` if the entire behavior should succeed when the child who suceeds first does.\n     * @returns {JIBO.v2.behaviors.Parallel}\n     */\n    static generateProtocol(behaviors: JIBO.v2.behaviors.Behavior[], succeedOnFirst=false): JIBO.v2.behaviors.Parallel {\n        return {\n            id: generateTransactionID(),\n            type: \"PARALLEL\",\n            children: behaviors,\n            succeedOnFirst\n        };\n    }\n}","import {generateTransactionID} from '../../../UUID';\n\n\n/**\n * @class Requester.v2.structural.Sequence\n * @intdocs\n */\nexport class Sequence {\n\n    /**\n     * Generates Sequence Protocol. See [Phoenix RCP](https://github.jibo.com/phoenix/jibo-command-protocol) for `JIBO` docs.\n     * @method Requester.v2.structural.Sequence#generateProtocol\n     * @param {JIBO.v2.behaviors.Behavior[]} behaviors - Behaviors to execute in sequence\n     * @returns {JIBO.v2.behaviors.Sequence}\n     */\n    static generateProtocol(behaviors: JIBO.v2.behaviors.Behavior[]): JIBO.v2.behaviors.Sequence {\n        return {\n            id: generateTransactionID(),\n            type: \"SEQUENCE\",\n            children: behaviors\n        };\n    }\n}","/**\n * @namespace Requester.v2.emotion\n * @intdocs\n */\n\nexport * from './ImpactEmotion';","import { generateTransactionID } from '../../../UUID';\n\n\n/**\n * @class Requester.v2.emotion.ImpactEmotion\n * @intdocs\n */\nexport class ImpactEmotion {\n\n    /**\n     * Generates ImpactEmotion Protocol. See [Phoenix RCP](https://github.jibo.com/phoenix/jibo-command-protocol) for `JIBO` docs.\n     * @method Requester.v2.emotion.ImpactEmotion#generateProtocol\n     * @param {(\"NONE\" | \"LOW_POS\" | \"MEDIUM_POS\" | \"HIGH_POS\" | \"LOW_NEG\" | \"MEDIUM_NEG\" | \"HIGH_NEG\")} [valence] - Impact the valence axis\n     * @param {(\"NONE\" | \"LOW_POS\" | \"MEDIUM_POS\" | \"HIGH_POS\" | \"LOW_NEG\" | \"MEDIUM_NEG\" | \"HIGH_NEG\")} [confidence] - Impact the confidence axis\n     * @returns {JIBO.v2.behaviors.ImpactEmotion}\n     */\n    static generateProtocol(\n        valence?: \"NONE\" | \"LOW_POS\" | \"MEDIUM_POS\" | \"HIGH_POS\" | \"LOW_NEG\" | \"MEDIUM_NEG\" | \"HIGH_NEG\",\n        confidence?: \"NONE\" | \"LOW_POS\" | \"MEDIUM_POS\" | \"HIGH_POS\" | \"LOW_NEG\" | \"MEDIUM_NEG\" | \"HIGH_NEG\"\n    ): JIBO.v2.behaviors.ImpactEmotion {\n        return {\n            id: generateTransactionID(),\n            type: \"IMPACT_EMOTION\",\n            valence,\n            confidence\n        };\n    }\n}","/**\n * @namespace Requester.v2.perception\n * @intdocs\n */\n\nexport * from './SetPresentPerson';","import { generateTransactionID } from '../../../UUID';\n\n\n/**\n * @class Requester.v2.perception.SetPresentPerson\n * @intdocs\n */\nexport class SetPresentPerson {\n\n    /**\n     * Generates SetPresentPerson Protocol. See [Phoenix RCP](https://github.jibo.com/phoenix/jibo-command-protocol) for `JIBO` docs.\n     * @method Requester.v2.perception.SetPresentPerson#generateProtocol\n     * @param {string} looperId - Loop member's ID\n     * @param {(\"VOICE\" | \"FACE\" | \"USER_OVERRIDE\")} source - Source of the ID\n     * @param {number} confidence - Confidence level in this claim of presence\n     * @returns {JIBO.v2.behaviors.SetPresentPerson}\n     */\n    static generateProtocol(\n        looperId: string,\n        source: \"VOICE\" | \"FACE\" | \"USER_OVERRIDE\",\n        confidence: number\n    ): JIBO.v2.behaviors.SetPresentPerson {\n        return {\n            id: generateTransactionID(),\n            type: \"SET_PRESENT_PERSON\",\n            looperId,\n            source,\n            confidence\n        };\n    }\n}","import {generateTransactionID} from '../../UUID';\n\n\n\n/**\n * @namespace Requester.v2.play\n * @intdocs\n */\nexport class Play {\n\n    /**\n     * Generates Play Protocol. See [Phoenix RCP](https://github.jibo.com/phoenix/jibo-command-protocol) for `JIBO` docs.\n     * @method Requester.v2.play#generateProtocol\n     * @param {string} esml - ESML string to be spoken.\n     * @param {(string|Object)} [config] - AutoRule configuration options for the Play request.\n     * @param {Object} [options] - Speak options for the Play request.\n     * @returns {JIBO.v2.behaviors.Play}\n     */\n    static generateProtocol(esml: string, config?: string | Object, options?: Object): JIBO.v2.behaviors.Play {\n        return {\n            id: generateTransactionID(),\n            type: \"PLAY\",\n            autoRuleConfig: config,\n            speakOptions: options,\n            esml\n        };\n    }\n}","import {generateTransactionID} from '../../UUID';\n\n\n\n/**\n * @namespace Requester.v2.listen\n * @intdocs\n */\nexport class Listen {\n\n    /**\n     * Generates Listen Protocol. See [Phoenix RCP](https://github.jibo.com/phoenix/jibo-command-protocol) for `JIBO` docs.\n     * @method Requester.v2.listen#generateProtocol\n     * @param {(string|string[])} ruleContext - Robust Parser Rules / Dialog Flow Agents we're listening for.\n     * @param {JIBO.v2.behaviors.Intent[]} intents - Dialog Flow intents\n     * @returns {JIBO.v2.behaviors.Listen}\n     */\n    static generateProtocol(rules: string | string[], intents?: JIBO.v2.behaviors.Intent[]): JIBO.v2.behaviors.Listen {\n        const contexts = Array.isArray(rules) ? rules : [rules];\n        return {\n            id: generateTransactionID(),\n            type: \"LISTEN\",\n            contexts,\n            intents\n        };\n    }\n}","import {generateTransactionID} from '../../UUID';\n\n\n/**\n * @namespace Requester.v2.display\n * @intdocs\n */\nexport class Display {\n\n    /**\n     * Generates Display Protocol. See [Phoenix RCP](https://github.jibo.com/phoenix/jibo-command-protocol) for `JIBO` docs.\n     * @method Requester.v2.display#generateProtocol\n     * @param {string} name - Unique name of the Display.\n     * @param {(JIBO.v2.behaviors.EyeDisplay | JIBO.v2.behaviors.NoneDisplay | JIBO.v2.behaviors.MenuDisplay | JIBO.v2.behaviors.Image | JIBO.v2.behaviors.PhotoGallery | JIBO.v2.behaviors.LoopMembersMenu | JIBO.v2.behaviors.SkillDisplay | JIBO.v2.behaviors.TextDisplay)} view - The view to be displayed.\n     * @param {(0 | 1 | 2 | 3 | 4)} layer - Which layer the Display will be active on.\n     * @param {boolean} visible - If `visible` is `false`, the display will not show until a ShowDisplayAction is called on it.\n     * @param {boolean} keepDisplay - If `keepDisplay` is `true`, the display will stay upon completion until removed (?)\n     * @param {JIBO.v2.behaviors.Action[]} onCancel - Action handlers for when the Display is cancelled.\n     * @param {(\"dim\" | \"clear\")} [overlay] - Overlay options for the Display.\n     * @returns {JIBO.v2.behaviors.Display}\n     */\n    static generateProtocol(\n        name: string,\n        view: JIBO.v2.behaviors.EyeDisplay | JIBO.v2.behaviors.NoneDisplay | JIBO.v2.behaviors.MenuDisplay | JIBO.v2.behaviors.Image | JIBO.v2.behaviors.PhotoGallery | JIBO.v2.behaviors.LoopMembersMenu | JIBO.v2.behaviors.SkillDisplay | JIBO.v2.behaviors.TextDisplay,\n        layer: 0 | 1 | 2 | 3 | 4,\n        visible: boolean,\n        keepDisplay: boolean,\n        onCancel: JIBO.v2.behaviors.Action[],\n        overlay?: \"dim\" | \"clear\"\n    ): JIBO.v2.behaviors.Display {\n        return {\n            id: generateTransactionID(),\n            type: \"DISPLAY\",\n            name,\n            view,\n            layer,\n            overlay,\n            visible,\n            keepDisplay,\n            onCancel\n        };\n    }\n}\n\n","import {generateTransactionID} from '../../UUID';\n\n\n/**\n * @namespace Requester.v2.slim\n * @intdocs\n */\nexport class SLIM {\n\n    /**\n     * Generates SLIM Protocol. See [Phoenix RCP](https://github.jibo.com/phoenix/jibo-command-protocol) for `JIBO` docs.\n     * @method Requester.v2.slim#generateProtocol\n     * @param {JIBO.v2.behaviors.SLIMConfig} config - What components will comprise the SLIM.\n     * @param {JIBO.v2.behaviors.SLIMOptions} [options] - Configuration options for the SLIM.\n     * @returns {JIBO.v2.behaviors.SLIM}\n     */\n    static generateProtocol(config: JIBO.v2.behaviors.SLIMConfig, options?: JIBO.v2.behaviors.SLIMOptions): JIBO.v2.behaviors.SLIM {\n        return {\n            id: generateTransactionID(),\n            type: \"SLIM\",\n            config,\n            options\n        };\n    }\n}"],"sourceRoot":""}